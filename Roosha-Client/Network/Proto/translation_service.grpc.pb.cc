// Generated by the gRPC protobuf plugin.
// If you make any local change, they will be lost.
// source: translation_service.proto

#include "translation_service.pb.h"
#include "translation_service.grpc.pb.h"

#include <grpc++/impl/codegen/async_stream.h>
#include <grpc++/impl/codegen/async_unary_call.h>
#include <grpc++/impl/codegen/channel_interface.h>
#include <grpc++/impl/codegen/client_unary_call.h>
#include <grpc++/impl/codegen/method_handler_impl.h>
#include <grpc++/impl/codegen/rpc_service_method.h>
#include <grpc++/impl/codegen/service_type.h>
#include <grpc++/impl/codegen/sync_stream.h>
namespace roosha {
namespace translation {

static const char* RooshaTranslationService_method_names[] = {
  "/roosha.translation.RooshaTranslationService/translate",
  "/roosha.translation.RooshaTranslationService/proposeUserTranslation",
};

std::unique_ptr< RooshaTranslationService::Stub> RooshaTranslationService::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  std::unique_ptr< RooshaTranslationService::Stub> stub(new RooshaTranslationService::Stub(channel));
  return stub;
}

RooshaTranslationService::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel)
  : channel_(channel), rpcmethod_translate_(RooshaTranslationService_method_names[0], ::grpc::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_proposeUserTranslation_(RooshaTranslationService_method_names[1], ::grpc::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status RooshaTranslationService::Stub::translate(::grpc::ClientContext* context, const ::roosha::translation::TranslationRequest& request, ::roosha::translation::Translations* response) {
  return ::grpc::BlockingUnaryCall(channel_.get(), rpcmethod_translate_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::roosha::translation::Translations>* RooshaTranslationService::Stub::AsynctranslateRaw(::grpc::ClientContext* context, const ::roosha::translation::TranslationRequest& request, ::grpc::CompletionQueue* cq) {
  return new ::grpc::ClientAsyncResponseReader< ::roosha::translation::Translations>(channel_.get(), cq, rpcmethod_translate_, context, request);
}

::grpc::Status RooshaTranslationService::Stub::proposeUserTranslation(::grpc::ClientContext* context, const ::roosha::translation::Translation& request, ::roosha::commons::Void* response) {
  return ::grpc::BlockingUnaryCall(channel_.get(), rpcmethod_proposeUserTranslation_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::roosha::commons::Void>* RooshaTranslationService::Stub::AsyncproposeUserTranslationRaw(::grpc::ClientContext* context, const ::roosha::translation::Translation& request, ::grpc::CompletionQueue* cq) {
  return new ::grpc::ClientAsyncResponseReader< ::roosha::commons::Void>(channel_.get(), cq, rpcmethod_proposeUserTranslation_, context, request);
}

RooshaTranslationService::Service::Service() {
  (void)RooshaTranslationService_method_names;
  AddMethod(new ::grpc::RpcServiceMethod(
      RooshaTranslationService_method_names[0],
      ::grpc::RpcMethod::NORMAL_RPC,
      new ::grpc::RpcMethodHandler< RooshaTranslationService::Service, ::roosha::translation::TranslationRequest, ::roosha::translation::Translations>(
          std::mem_fn(&RooshaTranslationService::Service::translate), this)));
  AddMethod(new ::grpc::RpcServiceMethod(
      RooshaTranslationService_method_names[1],
      ::grpc::RpcMethod::NORMAL_RPC,
      new ::grpc::RpcMethodHandler< RooshaTranslationService::Service, ::roosha::translation::Translation, ::roosha::commons::Void>(
          std::mem_fn(&RooshaTranslationService::Service::proposeUserTranslation), this)));
}

RooshaTranslationService::Service::~Service() {
}

::grpc::Status RooshaTranslationService::Service::translate(::grpc::ServerContext* context, const ::roosha::translation::TranslationRequest* request, ::roosha::translation::Translations* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status RooshaTranslationService::Service::proposeUserTranslation(::grpc::ServerContext* context, const ::roosha::translation::Translation* request, ::roosha::commons::Void* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


}  // namespace roosha
}  // namespace translation

