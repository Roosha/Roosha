// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: roosha_service.proto

#ifndef PROTOBUF_roosha_5fservice_2eproto__INCLUDED
#define PROTOBUF_roosha_5fservice_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "commons.pb.h"
#include "changes.pb.h"
// @@protoc_insertion_point(includes)

namespace roosha {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_roosha_5fservice_2eproto();
void protobuf_AssignDesc_roosha_5fservice_2eproto();
void protobuf_ShutdownFile_roosha_5fservice_2eproto();

class Translation;
class TranslationRequest;
class Translations;

enum TranslationProvider {
  UNKNOWN = 0,
  YANDEX_DICTIONARY = 1,
  YANDEX_TRANSLATOR = 2,
  TranslationProvider_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  TranslationProvider_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool TranslationProvider_IsValid(int value);
const TranslationProvider TranslationProvider_MIN = UNKNOWN;
const TranslationProvider TranslationProvider_MAX = YANDEX_TRANSLATOR;
const int TranslationProvider_ARRAYSIZE = TranslationProvider_MAX + 1;

const ::google::protobuf::EnumDescriptor* TranslationProvider_descriptor();
inline const ::std::string& TranslationProvider_Name(TranslationProvider value) {
  return ::google::protobuf::internal::NameOfEnum(
    TranslationProvider_descriptor(), value);
}
inline bool TranslationProvider_Parse(
    const ::std::string& name, TranslationProvider* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TranslationProvider>(
    TranslationProvider_descriptor(), name, value);
}
// ===================================================================

class TranslationRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:roosha.TranslationRequest) */ {
 public:
  TranslationRequest();
  virtual ~TranslationRequest();

  TranslationRequest(const TranslationRequest& from);

  inline TranslationRequest& operator=(const TranslationRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TranslationRequest& default_instance();

  void Swap(TranslationRequest* other);

  // implements Message ----------------------------------------------

  inline TranslationRequest* New() const { return New(NULL); }

  TranslationRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TranslationRequest& from);
  void MergeFrom(const TranslationRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TranslationRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string source = 1;
  void clear_source();
  static const int kSourceFieldNumber = 1;
  const ::std::string& source() const;
  void set_source(const ::std::string& value);
  void set_source(const char* value);
  void set_source(const char* value, size_t size);
  ::std::string* mutable_source();
  ::std::string* release_source();
  void set_allocated_source(::std::string* source);

  // @@protoc_insertion_point(class_scope:roosha.TranslationRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr source_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_roosha_5fservice_2eproto();
  friend void protobuf_AssignDesc_roosha_5fservice_2eproto();
  friend void protobuf_ShutdownFile_roosha_5fservice_2eproto();

  void InitAsDefaultInstance();
  static TranslationRequest* default_instance_;
};
// -------------------------------------------------------------------

class Translations : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:roosha.Translations) */ {
 public:
  Translations();
  virtual ~Translations();

  Translations(const Translations& from);

  inline Translations& operator=(const Translations& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Translations& default_instance();

  void Swap(Translations* other);

  // implements Message ----------------------------------------------

  inline Translations* New() const { return New(NULL); }

  Translations* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Translations& from);
  void MergeFrom(const Translations& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Translations* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string source = 1;
  void clear_source();
  static const int kSourceFieldNumber = 1;
  const ::std::string& source() const;
  void set_source(const ::std::string& value);
  void set_source(const char* value);
  void set_source(const char* value, size_t size);
  ::std::string* mutable_source();
  ::std::string* release_source();
  void set_allocated_source(::std::string* source);

  // repeated .roosha.Translation translation = 2;
  int translation_size() const;
  void clear_translation();
  static const int kTranslationFieldNumber = 2;
  const ::roosha::Translation& translation(int index) const;
  ::roosha::Translation* mutable_translation(int index);
  ::roosha::Translation* add_translation();
  ::google::protobuf::RepeatedPtrField< ::roosha::Translation >*
      mutable_translation();
  const ::google::protobuf::RepeatedPtrField< ::roosha::Translation >&
      translation() const;

  // @@protoc_insertion_point(class_scope:roosha.Translations)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr source_;
  ::google::protobuf::RepeatedPtrField< ::roosha::Translation > translation_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_roosha_5fservice_2eproto();
  friend void protobuf_AssignDesc_roosha_5fservice_2eproto();
  friend void protobuf_ShutdownFile_roosha_5fservice_2eproto();

  void InitAsDefaultInstance();
  static Translations* default_instance_;
};
// -------------------------------------------------------------------

class Translation : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:roosha.Translation) */ {
 public:
  Translation();
  virtual ~Translation();

  Translation(const Translation& from);

  inline Translation& operator=(const Translation& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Translation& default_instance();

  void Swap(Translation* other);

  // implements Message ----------------------------------------------

  inline Translation* New() const { return New(NULL); }

  Translation* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Translation& from);
  void MergeFrom(const Translation& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Translation* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string target = 1;
  int target_size() const;
  void clear_target();
  static const int kTargetFieldNumber = 1;
  const ::std::string& target(int index) const;
  ::std::string* mutable_target(int index);
  void set_target(int index, const ::std::string& value);
  void set_target(int index, const char* value);
  void set_target(int index, const char* value, size_t size);
  ::std::string* add_target();
  void add_target(const ::std::string& value);
  void add_target(const char* value);
  void add_target(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& target() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_target();

  // repeated string example = 2;
  int example_size() const;
  void clear_example();
  static const int kExampleFieldNumber = 2;
  const ::std::string& example(int index) const;
  ::std::string* mutable_example(int index);
  void set_example(int index, const ::std::string& value);
  void set_example(int index, const char* value);
  void set_example(int index, const char* value, size_t size);
  ::std::string* add_example();
  void add_example(const ::std::string& value);
  void add_example(const char* value);
  void add_example(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& example() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_example();

  // optional .roosha.TranslationProvider provider = 3;
  void clear_provider();
  static const int kProviderFieldNumber = 3;
  ::roosha::TranslationProvider provider() const;
  void set_provider(::roosha::TranslationProvider value);

  // @@protoc_insertion_point(class_scope:roosha.Translation)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::std::string> target_;
  ::google::protobuf::RepeatedPtrField< ::std::string> example_;
  int provider_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_roosha_5fservice_2eproto();
  friend void protobuf_AssignDesc_roosha_5fservice_2eproto();
  friend void protobuf_ShutdownFile_roosha_5fservice_2eproto();

  void InitAsDefaultInstance();
  static Translation* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// TranslationRequest

// optional string source = 1;
inline void TranslationRequest::clear_source() {
  source_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TranslationRequest::source() const {
  // @@protoc_insertion_point(field_get:roosha.TranslationRequest.source)
  return source_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TranslationRequest::set_source(const ::std::string& value) {
  
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:roosha.TranslationRequest.source)
}
inline void TranslationRequest::set_source(const char* value) {
  
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:roosha.TranslationRequest.source)
}
inline void TranslationRequest::set_source(const char* value, size_t size) {
  
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:roosha.TranslationRequest.source)
}
inline ::std::string* TranslationRequest::mutable_source() {
  
  // @@protoc_insertion_point(field_mutable:roosha.TranslationRequest.source)
  return source_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TranslationRequest::release_source() {
  // @@protoc_insertion_point(field_release:roosha.TranslationRequest.source)
  
  return source_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TranslationRequest::set_allocated_source(::std::string* source) {
  if (source != NULL) {
    
  } else {
    
  }
  source_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), source);
  // @@protoc_insertion_point(field_set_allocated:roosha.TranslationRequest.source)
}

// -------------------------------------------------------------------

// Translations

// optional string source = 1;
inline void Translations::clear_source() {
  source_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Translations::source() const {
  // @@protoc_insertion_point(field_get:roosha.Translations.source)
  return source_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Translations::set_source(const ::std::string& value) {
  
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:roosha.Translations.source)
}
inline void Translations::set_source(const char* value) {
  
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:roosha.Translations.source)
}
inline void Translations::set_source(const char* value, size_t size) {
  
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:roosha.Translations.source)
}
inline ::std::string* Translations::mutable_source() {
  
  // @@protoc_insertion_point(field_mutable:roosha.Translations.source)
  return source_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Translations::release_source() {
  // @@protoc_insertion_point(field_release:roosha.Translations.source)
  
  return source_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Translations::set_allocated_source(::std::string* source) {
  if (source != NULL) {
    
  } else {
    
  }
  source_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), source);
  // @@protoc_insertion_point(field_set_allocated:roosha.Translations.source)
}

// repeated .roosha.Translation translation = 2;
inline int Translations::translation_size() const {
  return translation_.size();
}
inline void Translations::clear_translation() {
  translation_.Clear();
}
inline const ::roosha::Translation& Translations::translation(int index) const {
  // @@protoc_insertion_point(field_get:roosha.Translations.translation)
  return translation_.Get(index);
}
inline ::roosha::Translation* Translations::mutable_translation(int index) {
  // @@protoc_insertion_point(field_mutable:roosha.Translations.translation)
  return translation_.Mutable(index);
}
inline ::roosha::Translation* Translations::add_translation() {
  // @@protoc_insertion_point(field_add:roosha.Translations.translation)
  return translation_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::roosha::Translation >*
Translations::mutable_translation() {
  // @@protoc_insertion_point(field_mutable_list:roosha.Translations.translation)
  return &translation_;
}
inline const ::google::protobuf::RepeatedPtrField< ::roosha::Translation >&
Translations::translation() const {
  // @@protoc_insertion_point(field_list:roosha.Translations.translation)
  return translation_;
}

// -------------------------------------------------------------------

// Translation

// repeated string target = 1;
inline int Translation::target_size() const {
  return target_.size();
}
inline void Translation::clear_target() {
  target_.Clear();
}
inline const ::std::string& Translation::target(int index) const {
  // @@protoc_insertion_point(field_get:roosha.Translation.target)
  return target_.Get(index);
}
inline ::std::string* Translation::mutable_target(int index) {
  // @@protoc_insertion_point(field_mutable:roosha.Translation.target)
  return target_.Mutable(index);
}
inline void Translation::set_target(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:roosha.Translation.target)
  target_.Mutable(index)->assign(value);
}
inline void Translation::set_target(int index, const char* value) {
  target_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:roosha.Translation.target)
}
inline void Translation::set_target(int index, const char* value, size_t size) {
  target_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:roosha.Translation.target)
}
inline ::std::string* Translation::add_target() {
  // @@protoc_insertion_point(field_add_mutable:roosha.Translation.target)
  return target_.Add();
}
inline void Translation::add_target(const ::std::string& value) {
  target_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:roosha.Translation.target)
}
inline void Translation::add_target(const char* value) {
  target_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:roosha.Translation.target)
}
inline void Translation::add_target(const char* value, size_t size) {
  target_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:roosha.Translation.target)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Translation::target() const {
  // @@protoc_insertion_point(field_list:roosha.Translation.target)
  return target_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Translation::mutable_target() {
  // @@protoc_insertion_point(field_mutable_list:roosha.Translation.target)
  return &target_;
}

// repeated string example = 2;
inline int Translation::example_size() const {
  return example_.size();
}
inline void Translation::clear_example() {
  example_.Clear();
}
inline const ::std::string& Translation::example(int index) const {
  // @@protoc_insertion_point(field_get:roosha.Translation.example)
  return example_.Get(index);
}
inline ::std::string* Translation::mutable_example(int index) {
  // @@protoc_insertion_point(field_mutable:roosha.Translation.example)
  return example_.Mutable(index);
}
inline void Translation::set_example(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:roosha.Translation.example)
  example_.Mutable(index)->assign(value);
}
inline void Translation::set_example(int index, const char* value) {
  example_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:roosha.Translation.example)
}
inline void Translation::set_example(int index, const char* value, size_t size) {
  example_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:roosha.Translation.example)
}
inline ::std::string* Translation::add_example() {
  // @@protoc_insertion_point(field_add_mutable:roosha.Translation.example)
  return example_.Add();
}
inline void Translation::add_example(const ::std::string& value) {
  example_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:roosha.Translation.example)
}
inline void Translation::add_example(const char* value) {
  example_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:roosha.Translation.example)
}
inline void Translation::add_example(const char* value, size_t size) {
  example_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:roosha.Translation.example)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Translation::example() const {
  // @@protoc_insertion_point(field_list:roosha.Translation.example)
  return example_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Translation::mutable_example() {
  // @@protoc_insertion_point(field_mutable_list:roosha.Translation.example)
  return &example_;
}

// optional .roosha.TranslationProvider provider = 3;
inline void Translation::clear_provider() {
  provider_ = 0;
}
inline ::roosha::TranslationProvider Translation::provider() const {
  // @@protoc_insertion_point(field_get:roosha.Translation.provider)
  return static_cast< ::roosha::TranslationProvider >(provider_);
}
inline void Translation::set_provider(::roosha::TranslationProvider value) {
  
  provider_ = value;
  // @@protoc_insertion_point(field_set:roosha.Translation.provider)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace roosha

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::roosha::TranslationProvider> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::roosha::TranslationProvider>() {
  return ::roosha::TranslationProvider_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_roosha_5fservice_2eproto__INCLUDED
