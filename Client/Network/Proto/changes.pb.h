// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: changes.proto

#ifndef PROTOBUF_changes_2eproto__INCLUDED
#define PROTOBUF_changes_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace roosha {
class CardChange;
class CardChangeDefaultTypeInternal;
extern CardChangeDefaultTypeInternal _CardChange_default_instance_;
class CardChange_ChangeSource;
class CardChange_ChangeSourceDefaultTypeInternal;
extern CardChange_ChangeSourceDefaultTypeInternal _CardChange_ChangeSource_default_instance_;
class CardChange_CreateCard;
class CardChange_CreateCardDefaultTypeInternal;
extern CardChange_CreateCardDefaultTypeInternal _CardChange_CreateCard_default_instance_;
class CardChange_DeleteCard;
class CardChange_DeleteCardDefaultTypeInternal;
extern CardChange_DeleteCardDefaultTypeInternal _CardChange_DeleteCard_default_instance_;
class CardChange_DeleteElem;
class CardChange_DeleteElemDefaultTypeInternal;
extern CardChange_DeleteElemDefaultTypeInternal _CardChange_DeleteElem_default_instance_;
class CardChange_EditElem;
class CardChange_EditElemDefaultTypeInternal;
extern CardChange_EditElemDefaultTypeInternal _CardChange_EditElem_default_instance_;
class CardChange_InsertElem;
class CardChange_InsertElemDefaultTypeInternal;
extern CardChange_InsertElemDefaultTypeInternal _CardChange_InsertElem_default_instance_;
class Change;
class ChangeDefaultTypeInternal;
extern ChangeDefaultTypeInternal _Change_default_instance_;
}  // namespace roosha

namespace roosha {

namespace protobuf_changes_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_changes_2eproto

enum CardChange_Field {
  CardChange_Field_UNKNOWN = 0,
  CardChange_Field_TARGET = 1,
  CardChange_Field_EXAMPLE = 2,
  CardChange_Field_CardChange_Field_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CardChange_Field_CardChange_Field_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CardChange_Field_IsValid(int value);
const CardChange_Field CardChange_Field_Field_MIN = CardChange_Field_UNKNOWN;
const CardChange_Field CardChange_Field_Field_MAX = CardChange_Field_EXAMPLE;
const int CardChange_Field_Field_ARRAYSIZE = CardChange_Field_Field_MAX + 1;

const ::google::protobuf::EnumDescriptor* CardChange_Field_descriptor();
inline const ::std::string& CardChange_Field_Name(CardChange_Field value) {
  return ::google::protobuf::internal::NameOfEnum(
    CardChange_Field_descriptor(), value);
}
inline bool CardChange_Field_Parse(
    const ::std::string& name, CardChange_Field* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CardChange_Field>(
    CardChange_Field_descriptor(), name, value);
}
// ===================================================================

class Change : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:roosha.Change) */ {
 public:
  Change();
  virtual ~Change();

  Change(const Change& from);

  inline Change& operator=(const Change& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Change& default_instance();

  enum ChangeCase {
    kCardChange = 1,
    CHANGE_NOT_SET = 0,
  };

  static inline const Change* internal_default_instance() {
    return reinterpret_cast<const Change*>(
               &_Change_default_instance_);
  }

  void Swap(Change* other);

  // implements Message ----------------------------------------------

  inline Change* New() const PROTOBUF_FINAL { return New(NULL); }

  Change* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Change& from);
  void MergeFrom(const Change& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Change* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .roosha.CardChange cardChange = 1;
  bool has_cardchange() const;
  void clear_cardchange();
  static const int kCardChangeFieldNumber = 1;
  const ::roosha::CardChange& cardchange() const;
  ::roosha::CardChange* mutable_cardchange();
  ::roosha::CardChange* release_cardchange();
  void set_allocated_cardchange(::roosha::CardChange* cardchange);

  ChangeCase change_case() const;
  // @@protoc_insertion_point(class_scope:roosha.Change)
 private:
  void set_has_cardchange();

  inline bool has_change() const;
  void clear_change();
  inline void clear_has_change();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union ChangeUnion {
    ChangeUnion() {}
    ::roosha::CardChange* cardchange_;
  } change_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct  protobuf_changes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CardChange_CreateCard : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:roosha.CardChange.CreateCard) */ {
 public:
  CardChange_CreateCard();
  virtual ~CardChange_CreateCard();

  CardChange_CreateCard(const CardChange_CreateCard& from);

  inline CardChange_CreateCard& operator=(const CardChange_CreateCard& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CardChange_CreateCard& default_instance();

  static inline const CardChange_CreateCard* internal_default_instance() {
    return reinterpret_cast<const CardChange_CreateCard*>(
               &_CardChange_CreateCard_default_instance_);
  }

  void Swap(CardChange_CreateCard* other);

  // implements Message ----------------------------------------------

  inline CardChange_CreateCard* New() const PROTOBUF_FINAL { return New(NULL); }

  CardChange_CreateCard* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CardChange_CreateCard& from);
  void MergeFrom(const CardChange_CreateCard& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CardChange_CreateCard* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:roosha.CardChange.CreateCard)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct  protobuf_changes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CardChange_DeleteCard : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:roosha.CardChange.DeleteCard) */ {
 public:
  CardChange_DeleteCard();
  virtual ~CardChange_DeleteCard();

  CardChange_DeleteCard(const CardChange_DeleteCard& from);

  inline CardChange_DeleteCard& operator=(const CardChange_DeleteCard& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CardChange_DeleteCard& default_instance();

  static inline const CardChange_DeleteCard* internal_default_instance() {
    return reinterpret_cast<const CardChange_DeleteCard*>(
               &_CardChange_DeleteCard_default_instance_);
  }

  void Swap(CardChange_DeleteCard* other);

  // implements Message ----------------------------------------------

  inline CardChange_DeleteCard* New() const PROTOBUF_FINAL { return New(NULL); }

  CardChange_DeleteCard* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CardChange_DeleteCard& from);
  void MergeFrom(const CardChange_DeleteCard& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CardChange_DeleteCard* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:roosha.CardChange.DeleteCard)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct  protobuf_changes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CardChange_ChangeSource : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:roosha.CardChange.ChangeSource) */ {
 public:
  CardChange_ChangeSource();
  virtual ~CardChange_ChangeSource();

  CardChange_ChangeSource(const CardChange_ChangeSource& from);

  inline CardChange_ChangeSource& operator=(const CardChange_ChangeSource& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CardChange_ChangeSource& default_instance();

  static inline const CardChange_ChangeSource* internal_default_instance() {
    return reinterpret_cast<const CardChange_ChangeSource*>(
               &_CardChange_ChangeSource_default_instance_);
  }

  void Swap(CardChange_ChangeSource* other);

  // implements Message ----------------------------------------------

  inline CardChange_ChangeSource* New() const PROTOBUF_FINAL { return New(NULL); }

  CardChange_ChangeSource* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CardChange_ChangeSource& from);
  void MergeFrom(const CardChange_ChangeSource& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CardChange_ChangeSource* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string newSource = 1;
  void clear_newsource();
  static const int kNewSourceFieldNumber = 1;
  const ::std::string& newsource() const;
  void set_newsource(const ::std::string& value);
  #if LANG_CXX11
  void set_newsource(::std::string&& value);
  #endif
  void set_newsource(const char* value);
  void set_newsource(const char* value, size_t size);
  ::std::string* mutable_newsource();
  ::std::string* release_newsource();
  void set_allocated_newsource(::std::string* newsource);

  // @@protoc_insertion_point(class_scope:roosha.CardChange.ChangeSource)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr newsource_;
  mutable int _cached_size_;
  friend struct  protobuf_changes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CardChange_InsertElem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:roosha.CardChange.InsertElem) */ {
 public:
  CardChange_InsertElem();
  virtual ~CardChange_InsertElem();

  CardChange_InsertElem(const CardChange_InsertElem& from);

  inline CardChange_InsertElem& operator=(const CardChange_InsertElem& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CardChange_InsertElem& default_instance();

  static inline const CardChange_InsertElem* internal_default_instance() {
    return reinterpret_cast<const CardChange_InsertElem*>(
               &_CardChange_InsertElem_default_instance_);
  }

  void Swap(CardChange_InsertElem* other);

  // implements Message ----------------------------------------------

  inline CardChange_InsertElem* New() const PROTOBUF_FINAL { return New(NULL); }

  CardChange_InsertElem* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CardChange_InsertElem& from);
  void MergeFrom(const CardChange_InsertElem& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CardChange_InsertElem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes index = 2;
  void clear_index();
  static const int kIndexFieldNumber = 2;
  const ::std::string& index() const;
  void set_index(const ::std::string& value);
  #if LANG_CXX11
  void set_index(::std::string&& value);
  #endif
  void set_index(const char* value);
  void set_index(const void* value, size_t size);
  ::std::string* mutable_index();
  ::std::string* release_index();
  void set_allocated_index(::std::string* index);

  // string value = 3;
  void clear_value();
  static const int kValueFieldNumber = 3;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // .roosha.CardChange.Field field = 1;
  void clear_field();
  static const int kFieldFieldNumber = 1;
  ::roosha::CardChange_Field field() const;
  void set_field(::roosha::CardChange_Field value);

  // @@protoc_insertion_point(class_scope:roosha.CardChange.InsertElem)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr index_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  int field_;
  mutable int _cached_size_;
  friend struct  protobuf_changes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CardChange_DeleteElem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:roosha.CardChange.DeleteElem) */ {
 public:
  CardChange_DeleteElem();
  virtual ~CardChange_DeleteElem();

  CardChange_DeleteElem(const CardChange_DeleteElem& from);

  inline CardChange_DeleteElem& operator=(const CardChange_DeleteElem& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CardChange_DeleteElem& default_instance();

  static inline const CardChange_DeleteElem* internal_default_instance() {
    return reinterpret_cast<const CardChange_DeleteElem*>(
               &_CardChange_DeleteElem_default_instance_);
  }

  void Swap(CardChange_DeleteElem* other);

  // implements Message ----------------------------------------------

  inline CardChange_DeleteElem* New() const PROTOBUF_FINAL { return New(NULL); }

  CardChange_DeleteElem* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CardChange_DeleteElem& from);
  void MergeFrom(const CardChange_DeleteElem& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CardChange_DeleteElem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes index = 2;
  void clear_index();
  static const int kIndexFieldNumber = 2;
  const ::std::string& index() const;
  void set_index(const ::std::string& value);
  #if LANG_CXX11
  void set_index(::std::string&& value);
  #endif
  void set_index(const char* value);
  void set_index(const void* value, size_t size);
  ::std::string* mutable_index();
  ::std::string* release_index();
  void set_allocated_index(::std::string* index);

  // .roosha.CardChange.Field field = 1;
  void clear_field();
  static const int kFieldFieldNumber = 1;
  ::roosha::CardChange_Field field() const;
  void set_field(::roosha::CardChange_Field value);

  // @@protoc_insertion_point(class_scope:roosha.CardChange.DeleteElem)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr index_;
  int field_;
  mutable int _cached_size_;
  friend struct  protobuf_changes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CardChange_EditElem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:roosha.CardChange.EditElem) */ {
 public:
  CardChange_EditElem();
  virtual ~CardChange_EditElem();

  CardChange_EditElem(const CardChange_EditElem& from);

  inline CardChange_EditElem& operator=(const CardChange_EditElem& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CardChange_EditElem& default_instance();

  static inline const CardChange_EditElem* internal_default_instance() {
    return reinterpret_cast<const CardChange_EditElem*>(
               &_CardChange_EditElem_default_instance_);
  }

  void Swap(CardChange_EditElem* other);

  // implements Message ----------------------------------------------

  inline CardChange_EditElem* New() const PROTOBUF_FINAL { return New(NULL); }

  CardChange_EditElem* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CardChange_EditElem& from);
  void MergeFrom(const CardChange_EditElem& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CardChange_EditElem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes position = 2;
  void clear_position();
  static const int kPositionFieldNumber = 2;
  const ::std::string& position() const;
  void set_position(const ::std::string& value);
  #if LANG_CXX11
  void set_position(::std::string&& value);
  #endif
  void set_position(const char* value);
  void set_position(const void* value, size_t size);
  ::std::string* mutable_position();
  ::std::string* release_position();
  void set_allocated_position(::std::string* position);

  // string value = 3;
  void clear_value();
  static const int kValueFieldNumber = 3;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // .roosha.CardChange.Field field = 1;
  void clear_field();
  static const int kFieldFieldNumber = 1;
  ::roosha::CardChange_Field field() const;
  void set_field(::roosha::CardChange_Field value);

  // @@protoc_insertion_point(class_scope:roosha.CardChange.EditElem)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr position_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  int field_;
  mutable int _cached_size_;
  friend struct  protobuf_changes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CardChange : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:roosha.CardChange) */ {
 public:
  CardChange();
  virtual ~CardChange();

  CardChange(const CardChange& from);

  inline CardChange& operator=(const CardChange& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CardChange& default_instance();

  enum ChangeCase {
    kCreateCard = 2,
    kDeleteCard = 3,
    kChangeSource = 4,
    kInsertElem = 5,
    kDeleteElem = 6,
    kEditElem = 7,
    CHANGE_NOT_SET = 0,
  };

  static inline const CardChange* internal_default_instance() {
    return reinterpret_cast<const CardChange*>(
               &_CardChange_default_instance_);
  }

  void Swap(CardChange* other);

  // implements Message ----------------------------------------------

  inline CardChange* New() const PROTOBUF_FINAL { return New(NULL); }

  CardChange* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CardChange& from);
  void MergeFrom(const CardChange& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CardChange* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CardChange_CreateCard CreateCard;
  typedef CardChange_DeleteCard DeleteCard;
  typedef CardChange_ChangeSource ChangeSource;
  typedef CardChange_InsertElem InsertElem;
  typedef CardChange_DeleteElem DeleteElem;
  typedef CardChange_EditElem EditElem;

  typedef CardChange_Field Field;
  static const Field UNKNOWN =
    CardChange_Field_UNKNOWN;
  static const Field TARGET =
    CardChange_Field_TARGET;
  static const Field EXAMPLE =
    CardChange_Field_EXAMPLE;
  static inline bool Field_IsValid(int value) {
    return CardChange_Field_IsValid(value);
  }
  static const Field Field_MIN =
    CardChange_Field_Field_MIN;
  static const Field Field_MAX =
    CardChange_Field_Field_MAX;
  static const int Field_ARRAYSIZE =
    CardChange_Field_Field_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Field_descriptor() {
    return CardChange_Field_descriptor();
  }
  static inline const ::std::string& Field_Name(Field value) {
    return CardChange_Field_Name(value);
  }
  static inline bool Field_Parse(const ::std::string& name,
      Field* value) {
    return CardChange_Field_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string cardId = 1;
  void clear_cardid();
  static const int kCardIdFieldNumber = 1;
  const ::std::string& cardid() const;
  void set_cardid(const ::std::string& value);
  #if LANG_CXX11
  void set_cardid(::std::string&& value);
  #endif
  void set_cardid(const char* value);
  void set_cardid(const char* value, size_t size);
  ::std::string* mutable_cardid();
  ::std::string* release_cardid();
  void set_allocated_cardid(::std::string* cardid);

  // .roosha.CardChange.CreateCard createCard = 2;
  bool has_createcard() const;
  void clear_createcard();
  static const int kCreateCardFieldNumber = 2;
  const ::roosha::CardChange_CreateCard& createcard() const;
  ::roosha::CardChange_CreateCard* mutable_createcard();
  ::roosha::CardChange_CreateCard* release_createcard();
  void set_allocated_createcard(::roosha::CardChange_CreateCard* createcard);

  // .roosha.CardChange.DeleteCard deleteCard = 3;
  bool has_deletecard() const;
  void clear_deletecard();
  static const int kDeleteCardFieldNumber = 3;
  const ::roosha::CardChange_DeleteCard& deletecard() const;
  ::roosha::CardChange_DeleteCard* mutable_deletecard();
  ::roosha::CardChange_DeleteCard* release_deletecard();
  void set_allocated_deletecard(::roosha::CardChange_DeleteCard* deletecard);

  // .roosha.CardChange.ChangeSource changeSource = 4;
  bool has_changesource() const;
  void clear_changesource();
  static const int kChangeSourceFieldNumber = 4;
  const ::roosha::CardChange_ChangeSource& changesource() const;
  ::roosha::CardChange_ChangeSource* mutable_changesource();
  ::roosha::CardChange_ChangeSource* release_changesource();
  void set_allocated_changesource(::roosha::CardChange_ChangeSource* changesource);

  // .roosha.CardChange.InsertElem insertElem = 5;
  bool has_insertelem() const;
  void clear_insertelem();
  static const int kInsertElemFieldNumber = 5;
  const ::roosha::CardChange_InsertElem& insertelem() const;
  ::roosha::CardChange_InsertElem* mutable_insertelem();
  ::roosha::CardChange_InsertElem* release_insertelem();
  void set_allocated_insertelem(::roosha::CardChange_InsertElem* insertelem);

  // .roosha.CardChange.DeleteElem deleteElem = 6;
  bool has_deleteelem() const;
  void clear_deleteelem();
  static const int kDeleteElemFieldNumber = 6;
  const ::roosha::CardChange_DeleteElem& deleteelem() const;
  ::roosha::CardChange_DeleteElem* mutable_deleteelem();
  ::roosha::CardChange_DeleteElem* release_deleteelem();
  void set_allocated_deleteelem(::roosha::CardChange_DeleteElem* deleteelem);

  // .roosha.CardChange.EditElem editElem = 7;
  bool has_editelem() const;
  void clear_editelem();
  static const int kEditElemFieldNumber = 7;
  const ::roosha::CardChange_EditElem& editelem() const;
  ::roosha::CardChange_EditElem* mutable_editelem();
  ::roosha::CardChange_EditElem* release_editelem();
  void set_allocated_editelem(::roosha::CardChange_EditElem* editelem);

  ChangeCase change_case() const;
  // @@protoc_insertion_point(class_scope:roosha.CardChange)
 private:
  void set_has_createcard();
  void set_has_deletecard();
  void set_has_changesource();
  void set_has_insertelem();
  void set_has_deleteelem();
  void set_has_editelem();

  inline bool has_change() const;
  void clear_change();
  inline void clear_has_change();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr cardid_;
  union ChangeUnion {
    ChangeUnion() {}
    ::roosha::CardChange_CreateCard* createcard_;
    ::roosha::CardChange_DeleteCard* deletecard_;
    ::roosha::CardChange_ChangeSource* changesource_;
    ::roosha::CardChange_InsertElem* insertelem_;
    ::roosha::CardChange_DeleteElem* deleteelem_;
    ::roosha::CardChange_EditElem* editelem_;
  } change_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct  protobuf_changes_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Change

// .roosha.CardChange cardChange = 1;
inline bool Change::has_cardchange() const {
  return change_case() == kCardChange;
}
inline void Change::set_has_cardchange() {
  _oneof_case_[0] = kCardChange;
}
inline void Change::clear_cardchange() {
  if (has_cardchange()) {
    delete change_.cardchange_;
    clear_has_change();
  }
}
inline  const ::roosha::CardChange& Change::cardchange() const {
  // @@protoc_insertion_point(field_get:roosha.Change.cardChange)
  return has_cardchange()
      ? *change_.cardchange_
      : ::roosha::CardChange::default_instance();
}
inline ::roosha::CardChange* Change::mutable_cardchange() {
  if (!has_cardchange()) {
    clear_change();
    set_has_cardchange();
    change_.cardchange_ = new ::roosha::CardChange;
  }
  // @@protoc_insertion_point(field_mutable:roosha.Change.cardChange)
  return change_.cardchange_;
}
inline ::roosha::CardChange* Change::release_cardchange() {
  // @@protoc_insertion_point(field_release:roosha.Change.cardChange)
  if (has_cardchange()) {
    clear_has_change();
    ::roosha::CardChange* temp = change_.cardchange_;
    change_.cardchange_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Change::set_allocated_cardchange(::roosha::CardChange* cardchange) {
  clear_change();
  if (cardchange) {
    set_has_cardchange();
    change_.cardchange_ = cardchange;
  }
  // @@protoc_insertion_point(field_set_allocated:roosha.Change.cardChange)
}

inline bool Change::has_change() const {
  return change_case() != CHANGE_NOT_SET;
}
inline void Change::clear_has_change() {
  _oneof_case_[0] = CHANGE_NOT_SET;
}
inline Change::ChangeCase Change::change_case() const {
  return Change::ChangeCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// CardChange_CreateCard

// -------------------------------------------------------------------

// CardChange_DeleteCard

// -------------------------------------------------------------------

// CardChange_ChangeSource

// string newSource = 1;
inline void CardChange_ChangeSource::clear_newsource() {
  newsource_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CardChange_ChangeSource::newsource() const {
  // @@protoc_insertion_point(field_get:roosha.CardChange.ChangeSource.newSource)
  return newsource_.GetNoArena();
}
inline void CardChange_ChangeSource::set_newsource(const ::std::string& value) {
  
  newsource_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:roosha.CardChange.ChangeSource.newSource)
}
#if LANG_CXX11
inline void CardChange_ChangeSource::set_newsource(::std::string&& value) {
  
  newsource_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:roosha.CardChange.ChangeSource.newSource)
}
#endif
inline void CardChange_ChangeSource::set_newsource(const char* value) {
  
  newsource_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:roosha.CardChange.ChangeSource.newSource)
}
inline void CardChange_ChangeSource::set_newsource(const char* value, size_t size) {
  
  newsource_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:roosha.CardChange.ChangeSource.newSource)
}
inline ::std::string* CardChange_ChangeSource::mutable_newsource() {
  
  // @@protoc_insertion_point(field_mutable:roosha.CardChange.ChangeSource.newSource)
  return newsource_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CardChange_ChangeSource::release_newsource() {
  // @@protoc_insertion_point(field_release:roosha.CardChange.ChangeSource.newSource)
  
  return newsource_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CardChange_ChangeSource::set_allocated_newsource(::std::string* newsource) {
  if (newsource != NULL) {
    
  } else {
    
  }
  newsource_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), newsource);
  // @@protoc_insertion_point(field_set_allocated:roosha.CardChange.ChangeSource.newSource)
}

// -------------------------------------------------------------------

// CardChange_InsertElem

// .roosha.CardChange.Field field = 1;
inline void CardChange_InsertElem::clear_field() {
  field_ = 0;
}
inline ::roosha::CardChange_Field CardChange_InsertElem::field() const {
  // @@protoc_insertion_point(field_get:roosha.CardChange.InsertElem.field)
  return static_cast< ::roosha::CardChange_Field >(field_);
}
inline void CardChange_InsertElem::set_field(::roosha::CardChange_Field value) {
  
  field_ = value;
  // @@protoc_insertion_point(field_set:roosha.CardChange.InsertElem.field)
}

// bytes index = 2;
inline void CardChange_InsertElem::clear_index() {
  index_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CardChange_InsertElem::index() const {
  // @@protoc_insertion_point(field_get:roosha.CardChange.InsertElem.index)
  return index_.GetNoArena();
}
inline void CardChange_InsertElem::set_index(const ::std::string& value) {
  
  index_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:roosha.CardChange.InsertElem.index)
}
#if LANG_CXX11
inline void CardChange_InsertElem::set_index(::std::string&& value) {
  
  index_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:roosha.CardChange.InsertElem.index)
}
#endif
inline void CardChange_InsertElem::set_index(const char* value) {
  
  index_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:roosha.CardChange.InsertElem.index)
}
inline void CardChange_InsertElem::set_index(const void* value, size_t size) {
  
  index_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:roosha.CardChange.InsertElem.index)
}
inline ::std::string* CardChange_InsertElem::mutable_index() {
  
  // @@protoc_insertion_point(field_mutable:roosha.CardChange.InsertElem.index)
  return index_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CardChange_InsertElem::release_index() {
  // @@protoc_insertion_point(field_release:roosha.CardChange.InsertElem.index)
  
  return index_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CardChange_InsertElem::set_allocated_index(::std::string* index) {
  if (index != NULL) {
    
  } else {
    
  }
  index_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), index);
  // @@protoc_insertion_point(field_set_allocated:roosha.CardChange.InsertElem.index)
}

// string value = 3;
inline void CardChange_InsertElem::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CardChange_InsertElem::value() const {
  // @@protoc_insertion_point(field_get:roosha.CardChange.InsertElem.value)
  return value_.GetNoArena();
}
inline void CardChange_InsertElem::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:roosha.CardChange.InsertElem.value)
}
#if LANG_CXX11
inline void CardChange_InsertElem::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:roosha.CardChange.InsertElem.value)
}
#endif
inline void CardChange_InsertElem::set_value(const char* value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:roosha.CardChange.InsertElem.value)
}
inline void CardChange_InsertElem::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:roosha.CardChange.InsertElem.value)
}
inline ::std::string* CardChange_InsertElem::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:roosha.CardChange.InsertElem.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CardChange_InsertElem::release_value() {
  // @@protoc_insertion_point(field_release:roosha.CardChange.InsertElem.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CardChange_InsertElem::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:roosha.CardChange.InsertElem.value)
}

// -------------------------------------------------------------------

// CardChange_DeleteElem

// .roosha.CardChange.Field field = 1;
inline void CardChange_DeleteElem::clear_field() {
  field_ = 0;
}
inline ::roosha::CardChange_Field CardChange_DeleteElem::field() const {
  // @@protoc_insertion_point(field_get:roosha.CardChange.DeleteElem.field)
  return static_cast< ::roosha::CardChange_Field >(field_);
}
inline void CardChange_DeleteElem::set_field(::roosha::CardChange_Field value) {
  
  field_ = value;
  // @@protoc_insertion_point(field_set:roosha.CardChange.DeleteElem.field)
}

// bytes index = 2;
inline void CardChange_DeleteElem::clear_index() {
  index_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CardChange_DeleteElem::index() const {
  // @@protoc_insertion_point(field_get:roosha.CardChange.DeleteElem.index)
  return index_.GetNoArena();
}
inline void CardChange_DeleteElem::set_index(const ::std::string& value) {
  
  index_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:roosha.CardChange.DeleteElem.index)
}
#if LANG_CXX11
inline void CardChange_DeleteElem::set_index(::std::string&& value) {
  
  index_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:roosha.CardChange.DeleteElem.index)
}
#endif
inline void CardChange_DeleteElem::set_index(const char* value) {
  
  index_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:roosha.CardChange.DeleteElem.index)
}
inline void CardChange_DeleteElem::set_index(const void* value, size_t size) {
  
  index_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:roosha.CardChange.DeleteElem.index)
}
inline ::std::string* CardChange_DeleteElem::mutable_index() {
  
  // @@protoc_insertion_point(field_mutable:roosha.CardChange.DeleteElem.index)
  return index_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CardChange_DeleteElem::release_index() {
  // @@protoc_insertion_point(field_release:roosha.CardChange.DeleteElem.index)
  
  return index_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CardChange_DeleteElem::set_allocated_index(::std::string* index) {
  if (index != NULL) {
    
  } else {
    
  }
  index_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), index);
  // @@protoc_insertion_point(field_set_allocated:roosha.CardChange.DeleteElem.index)
}

// -------------------------------------------------------------------

// CardChange_EditElem

// .roosha.CardChange.Field field = 1;
inline void CardChange_EditElem::clear_field() {
  field_ = 0;
}
inline ::roosha::CardChange_Field CardChange_EditElem::field() const {
  // @@protoc_insertion_point(field_get:roosha.CardChange.EditElem.field)
  return static_cast< ::roosha::CardChange_Field >(field_);
}
inline void CardChange_EditElem::set_field(::roosha::CardChange_Field value) {
  
  field_ = value;
  // @@protoc_insertion_point(field_set:roosha.CardChange.EditElem.field)
}

// bytes position = 2;
inline void CardChange_EditElem::clear_position() {
  position_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CardChange_EditElem::position() const {
  // @@protoc_insertion_point(field_get:roosha.CardChange.EditElem.position)
  return position_.GetNoArena();
}
inline void CardChange_EditElem::set_position(const ::std::string& value) {
  
  position_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:roosha.CardChange.EditElem.position)
}
#if LANG_CXX11
inline void CardChange_EditElem::set_position(::std::string&& value) {
  
  position_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:roosha.CardChange.EditElem.position)
}
#endif
inline void CardChange_EditElem::set_position(const char* value) {
  
  position_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:roosha.CardChange.EditElem.position)
}
inline void CardChange_EditElem::set_position(const void* value, size_t size) {
  
  position_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:roosha.CardChange.EditElem.position)
}
inline ::std::string* CardChange_EditElem::mutable_position() {
  
  // @@protoc_insertion_point(field_mutable:roosha.CardChange.EditElem.position)
  return position_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CardChange_EditElem::release_position() {
  // @@protoc_insertion_point(field_release:roosha.CardChange.EditElem.position)
  
  return position_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CardChange_EditElem::set_allocated_position(::std::string* position) {
  if (position != NULL) {
    
  } else {
    
  }
  position_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), position);
  // @@protoc_insertion_point(field_set_allocated:roosha.CardChange.EditElem.position)
}

// string value = 3;
inline void CardChange_EditElem::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CardChange_EditElem::value() const {
  // @@protoc_insertion_point(field_get:roosha.CardChange.EditElem.value)
  return value_.GetNoArena();
}
inline void CardChange_EditElem::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:roosha.CardChange.EditElem.value)
}
#if LANG_CXX11
inline void CardChange_EditElem::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:roosha.CardChange.EditElem.value)
}
#endif
inline void CardChange_EditElem::set_value(const char* value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:roosha.CardChange.EditElem.value)
}
inline void CardChange_EditElem::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:roosha.CardChange.EditElem.value)
}
inline ::std::string* CardChange_EditElem::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:roosha.CardChange.EditElem.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CardChange_EditElem::release_value() {
  // @@protoc_insertion_point(field_release:roosha.CardChange.EditElem.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CardChange_EditElem::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:roosha.CardChange.EditElem.value)
}

// -------------------------------------------------------------------

// CardChange

// string cardId = 1;
inline void CardChange::clear_cardid() {
  cardid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CardChange::cardid() const {
  // @@protoc_insertion_point(field_get:roosha.CardChange.cardId)
  return cardid_.GetNoArena();
}
inline void CardChange::set_cardid(const ::std::string& value) {
  
  cardid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:roosha.CardChange.cardId)
}
#if LANG_CXX11
inline void CardChange::set_cardid(::std::string&& value) {
  
  cardid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:roosha.CardChange.cardId)
}
#endif
inline void CardChange::set_cardid(const char* value) {
  
  cardid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:roosha.CardChange.cardId)
}
inline void CardChange::set_cardid(const char* value, size_t size) {
  
  cardid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:roosha.CardChange.cardId)
}
inline ::std::string* CardChange::mutable_cardid() {
  
  // @@protoc_insertion_point(field_mutable:roosha.CardChange.cardId)
  return cardid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CardChange::release_cardid() {
  // @@protoc_insertion_point(field_release:roosha.CardChange.cardId)
  
  return cardid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CardChange::set_allocated_cardid(::std::string* cardid) {
  if (cardid != NULL) {
    
  } else {
    
  }
  cardid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cardid);
  // @@protoc_insertion_point(field_set_allocated:roosha.CardChange.cardId)
}

// .roosha.CardChange.CreateCard createCard = 2;
inline bool CardChange::has_createcard() const {
  return change_case() == kCreateCard;
}
inline void CardChange::set_has_createcard() {
  _oneof_case_[0] = kCreateCard;
}
inline void CardChange::clear_createcard() {
  if (has_createcard()) {
    delete change_.createcard_;
    clear_has_change();
  }
}
inline  const ::roosha::CardChange_CreateCard& CardChange::createcard() const {
  // @@protoc_insertion_point(field_get:roosha.CardChange.createCard)
  return has_createcard()
      ? *change_.createcard_
      : ::roosha::CardChange_CreateCard::default_instance();
}
inline ::roosha::CardChange_CreateCard* CardChange::mutable_createcard() {
  if (!has_createcard()) {
    clear_change();
    set_has_createcard();
    change_.createcard_ = new ::roosha::CardChange_CreateCard;
  }
  // @@protoc_insertion_point(field_mutable:roosha.CardChange.createCard)
  return change_.createcard_;
}
inline ::roosha::CardChange_CreateCard* CardChange::release_createcard() {
  // @@protoc_insertion_point(field_release:roosha.CardChange.createCard)
  if (has_createcard()) {
    clear_has_change();
    ::roosha::CardChange_CreateCard* temp = change_.createcard_;
    change_.createcard_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void CardChange::set_allocated_createcard(::roosha::CardChange_CreateCard* createcard) {
  clear_change();
  if (createcard) {
    set_has_createcard();
    change_.createcard_ = createcard;
  }
  // @@protoc_insertion_point(field_set_allocated:roosha.CardChange.createCard)
}

// .roosha.CardChange.DeleteCard deleteCard = 3;
inline bool CardChange::has_deletecard() const {
  return change_case() == kDeleteCard;
}
inline void CardChange::set_has_deletecard() {
  _oneof_case_[0] = kDeleteCard;
}
inline void CardChange::clear_deletecard() {
  if (has_deletecard()) {
    delete change_.deletecard_;
    clear_has_change();
  }
}
inline  const ::roosha::CardChange_DeleteCard& CardChange::deletecard() const {
  // @@protoc_insertion_point(field_get:roosha.CardChange.deleteCard)
  return has_deletecard()
      ? *change_.deletecard_
      : ::roosha::CardChange_DeleteCard::default_instance();
}
inline ::roosha::CardChange_DeleteCard* CardChange::mutable_deletecard() {
  if (!has_deletecard()) {
    clear_change();
    set_has_deletecard();
    change_.deletecard_ = new ::roosha::CardChange_DeleteCard;
  }
  // @@protoc_insertion_point(field_mutable:roosha.CardChange.deleteCard)
  return change_.deletecard_;
}
inline ::roosha::CardChange_DeleteCard* CardChange::release_deletecard() {
  // @@protoc_insertion_point(field_release:roosha.CardChange.deleteCard)
  if (has_deletecard()) {
    clear_has_change();
    ::roosha::CardChange_DeleteCard* temp = change_.deletecard_;
    change_.deletecard_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void CardChange::set_allocated_deletecard(::roosha::CardChange_DeleteCard* deletecard) {
  clear_change();
  if (deletecard) {
    set_has_deletecard();
    change_.deletecard_ = deletecard;
  }
  // @@protoc_insertion_point(field_set_allocated:roosha.CardChange.deleteCard)
}

// .roosha.CardChange.ChangeSource changeSource = 4;
inline bool CardChange::has_changesource() const {
  return change_case() == kChangeSource;
}
inline void CardChange::set_has_changesource() {
  _oneof_case_[0] = kChangeSource;
}
inline void CardChange::clear_changesource() {
  if (has_changesource()) {
    delete change_.changesource_;
    clear_has_change();
  }
}
inline  const ::roosha::CardChange_ChangeSource& CardChange::changesource() const {
  // @@protoc_insertion_point(field_get:roosha.CardChange.changeSource)
  return has_changesource()
      ? *change_.changesource_
      : ::roosha::CardChange_ChangeSource::default_instance();
}
inline ::roosha::CardChange_ChangeSource* CardChange::mutable_changesource() {
  if (!has_changesource()) {
    clear_change();
    set_has_changesource();
    change_.changesource_ = new ::roosha::CardChange_ChangeSource;
  }
  // @@protoc_insertion_point(field_mutable:roosha.CardChange.changeSource)
  return change_.changesource_;
}
inline ::roosha::CardChange_ChangeSource* CardChange::release_changesource() {
  // @@protoc_insertion_point(field_release:roosha.CardChange.changeSource)
  if (has_changesource()) {
    clear_has_change();
    ::roosha::CardChange_ChangeSource* temp = change_.changesource_;
    change_.changesource_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void CardChange::set_allocated_changesource(::roosha::CardChange_ChangeSource* changesource) {
  clear_change();
  if (changesource) {
    set_has_changesource();
    change_.changesource_ = changesource;
  }
  // @@protoc_insertion_point(field_set_allocated:roosha.CardChange.changeSource)
}

// .roosha.CardChange.InsertElem insertElem = 5;
inline bool CardChange::has_insertelem() const {
  return change_case() == kInsertElem;
}
inline void CardChange::set_has_insertelem() {
  _oneof_case_[0] = kInsertElem;
}
inline void CardChange::clear_insertelem() {
  if (has_insertelem()) {
    delete change_.insertelem_;
    clear_has_change();
  }
}
inline  const ::roosha::CardChange_InsertElem& CardChange::insertelem() const {
  // @@protoc_insertion_point(field_get:roosha.CardChange.insertElem)
  return has_insertelem()
      ? *change_.insertelem_
      : ::roosha::CardChange_InsertElem::default_instance();
}
inline ::roosha::CardChange_InsertElem* CardChange::mutable_insertelem() {
  if (!has_insertelem()) {
    clear_change();
    set_has_insertelem();
    change_.insertelem_ = new ::roosha::CardChange_InsertElem;
  }
  // @@protoc_insertion_point(field_mutable:roosha.CardChange.insertElem)
  return change_.insertelem_;
}
inline ::roosha::CardChange_InsertElem* CardChange::release_insertelem() {
  // @@protoc_insertion_point(field_release:roosha.CardChange.insertElem)
  if (has_insertelem()) {
    clear_has_change();
    ::roosha::CardChange_InsertElem* temp = change_.insertelem_;
    change_.insertelem_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void CardChange::set_allocated_insertelem(::roosha::CardChange_InsertElem* insertelem) {
  clear_change();
  if (insertelem) {
    set_has_insertelem();
    change_.insertelem_ = insertelem;
  }
  // @@protoc_insertion_point(field_set_allocated:roosha.CardChange.insertElem)
}

// .roosha.CardChange.DeleteElem deleteElem = 6;
inline bool CardChange::has_deleteelem() const {
  return change_case() == kDeleteElem;
}
inline void CardChange::set_has_deleteelem() {
  _oneof_case_[0] = kDeleteElem;
}
inline void CardChange::clear_deleteelem() {
  if (has_deleteelem()) {
    delete change_.deleteelem_;
    clear_has_change();
  }
}
inline  const ::roosha::CardChange_DeleteElem& CardChange::deleteelem() const {
  // @@protoc_insertion_point(field_get:roosha.CardChange.deleteElem)
  return has_deleteelem()
      ? *change_.deleteelem_
      : ::roosha::CardChange_DeleteElem::default_instance();
}
inline ::roosha::CardChange_DeleteElem* CardChange::mutable_deleteelem() {
  if (!has_deleteelem()) {
    clear_change();
    set_has_deleteelem();
    change_.deleteelem_ = new ::roosha::CardChange_DeleteElem;
  }
  // @@protoc_insertion_point(field_mutable:roosha.CardChange.deleteElem)
  return change_.deleteelem_;
}
inline ::roosha::CardChange_DeleteElem* CardChange::release_deleteelem() {
  // @@protoc_insertion_point(field_release:roosha.CardChange.deleteElem)
  if (has_deleteelem()) {
    clear_has_change();
    ::roosha::CardChange_DeleteElem* temp = change_.deleteelem_;
    change_.deleteelem_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void CardChange::set_allocated_deleteelem(::roosha::CardChange_DeleteElem* deleteelem) {
  clear_change();
  if (deleteelem) {
    set_has_deleteelem();
    change_.deleteelem_ = deleteelem;
  }
  // @@protoc_insertion_point(field_set_allocated:roosha.CardChange.deleteElem)
}

// .roosha.CardChange.EditElem editElem = 7;
inline bool CardChange::has_editelem() const {
  return change_case() == kEditElem;
}
inline void CardChange::set_has_editelem() {
  _oneof_case_[0] = kEditElem;
}
inline void CardChange::clear_editelem() {
  if (has_editelem()) {
    delete change_.editelem_;
    clear_has_change();
  }
}
inline  const ::roosha::CardChange_EditElem& CardChange::editelem() const {
  // @@protoc_insertion_point(field_get:roosha.CardChange.editElem)
  return has_editelem()
      ? *change_.editelem_
      : ::roosha::CardChange_EditElem::default_instance();
}
inline ::roosha::CardChange_EditElem* CardChange::mutable_editelem() {
  if (!has_editelem()) {
    clear_change();
    set_has_editelem();
    change_.editelem_ = new ::roosha::CardChange_EditElem;
  }
  // @@protoc_insertion_point(field_mutable:roosha.CardChange.editElem)
  return change_.editelem_;
}
inline ::roosha::CardChange_EditElem* CardChange::release_editelem() {
  // @@protoc_insertion_point(field_release:roosha.CardChange.editElem)
  if (has_editelem()) {
    clear_has_change();
    ::roosha::CardChange_EditElem* temp = change_.editelem_;
    change_.editelem_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void CardChange::set_allocated_editelem(::roosha::CardChange_EditElem* editelem) {
  clear_change();
  if (editelem) {
    set_has_editelem();
    change_.editelem_ = editelem;
  }
  // @@protoc_insertion_point(field_set_allocated:roosha.CardChange.editElem)
}

inline bool CardChange::has_change() const {
  return change_case() != CHANGE_NOT_SET;
}
inline void CardChange::clear_has_change() {
  _oneof_case_[0] = CHANGE_NOT_SET;
}
inline CardChange::ChangeCase CardChange::change_case() const {
  return CardChange::ChangeCase(_oneof_case_[0]);
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace roosha

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::roosha::CardChange_Field> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::roosha::CardChange_Field>() {
  return ::roosha::CardChange_Field_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_changes_2eproto__INCLUDED
