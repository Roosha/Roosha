// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: changes.proto

#ifndef PROTOBUF_changes_2eproto__INCLUDED
#define PROTOBUF_changes_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace roosha {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_changes_2eproto();
void protobuf_AssignDesc_changes_2eproto();
void protobuf_ShutdownFile_changes_2eproto();

class Change;
class Change_StringListChange;

enum Change_StringListChange_Field {
  Change_StringListChange_Field_UNKNOWN = 0,
  Change_StringListChange_Field_TARGET = 1,
  Change_StringListChange_Field_EXAMPLE = 2,
  Change_StringListChange_Field_Change_StringListChange_Field_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Change_StringListChange_Field_Change_StringListChange_Field_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Change_StringListChange_Field_IsValid(int value);
const Change_StringListChange_Field Change_StringListChange_Field_Field_MIN = Change_StringListChange_Field_UNKNOWN;
const Change_StringListChange_Field Change_StringListChange_Field_Field_MAX = Change_StringListChange_Field_EXAMPLE;
const int Change_StringListChange_Field_Field_ARRAYSIZE = Change_StringListChange_Field_Field_MAX + 1;

const ::google::protobuf::EnumDescriptor* Change_StringListChange_Field_descriptor();
inline const ::std::string& Change_StringListChange_Field_Name(Change_StringListChange_Field value) {
  return ::google::protobuf::internal::NameOfEnum(
    Change_StringListChange_Field_descriptor(), value);
}
inline bool Change_StringListChange_Field_Parse(
    const ::std::string& name, Change_StringListChange_Field* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Change_StringListChange_Field>(
    Change_StringListChange_Field_descriptor(), name, value);
}
enum Change_ChangeType {
  Change_ChangeType_UNKNOWN = 0,
  Change_ChangeType_CHANGE_SOURCE = 1,
  Change_ChangeType_DELETE_CARD = 2,
  Change_ChangeType_CREATE_CARD = 3,
  Change_ChangeType_INSERT_ELEM = 4,
  Change_ChangeType_DELETE_ELEM = 5,
  Change_ChangeType_EDIT_ELEM = 6,
  Change_ChangeType_Change_ChangeType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Change_ChangeType_Change_ChangeType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Change_ChangeType_IsValid(int value);
const Change_ChangeType Change_ChangeType_ChangeType_MIN = Change_ChangeType_UNKNOWN;
const Change_ChangeType Change_ChangeType_ChangeType_MAX = Change_ChangeType_EDIT_ELEM;
const int Change_ChangeType_ChangeType_ARRAYSIZE = Change_ChangeType_ChangeType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Change_ChangeType_descriptor();
inline const ::std::string& Change_ChangeType_Name(Change_ChangeType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Change_ChangeType_descriptor(), value);
}
inline bool Change_ChangeType_Parse(
    const ::std::string& name, Change_ChangeType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Change_ChangeType>(
    Change_ChangeType_descriptor(), name, value);
}
// ===================================================================

class Change_StringListChange : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:roosha.Change.StringListChange) */ {
 public:
  Change_StringListChange();
  virtual ~Change_StringListChange();

  Change_StringListChange(const Change_StringListChange& from);

  inline Change_StringListChange& operator=(const Change_StringListChange& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Change_StringListChange& default_instance();

  void Swap(Change_StringListChange* other);

  // implements Message ----------------------------------------------

  inline Change_StringListChange* New() const { return New(NULL); }

  Change_StringListChange* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Change_StringListChange& from);
  void MergeFrom(const Change_StringListChange& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Change_StringListChange* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Change_StringListChange_Field Field;
  static const Field UNKNOWN =
    Change_StringListChange_Field_UNKNOWN;
  static const Field TARGET =
    Change_StringListChange_Field_TARGET;
  static const Field EXAMPLE =
    Change_StringListChange_Field_EXAMPLE;
  static inline bool Field_IsValid(int value) {
    return Change_StringListChange_Field_IsValid(value);
  }
  static const Field Field_MIN =
    Change_StringListChange_Field_Field_MIN;
  static const Field Field_MAX =
    Change_StringListChange_Field_Field_MAX;
  static const int Field_ARRAYSIZE =
    Change_StringListChange_Field_Field_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Field_descriptor() {
    return Change_StringListChange_Field_descriptor();
  }
  static inline const ::std::string& Field_Name(Field value) {
    return Change_StringListChange_Field_Name(value);
  }
  static inline bool Field_Parse(const ::std::string& name,
      Field* value) {
    return Change_StringListChange_Field_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .roosha.Change.StringListChange.Field fieldName = 1;
  void clear_fieldname();
  static const int kFieldNameFieldNumber = 1;
  ::roosha::Change_StringListChange_Field fieldname() const;
  void set_fieldname(::roosha::Change_StringListChange_Field value);

  // optional uint32 index = 2;
  void clear_index();
  static const int kIndexFieldNumber = 2;
  ::google::protobuf::uint32 index() const;
  void set_index(::google::protobuf::uint32 value);

  // optional string value = 3;
  void clear_value();
  static const int kValueFieldNumber = 3;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:roosha.Change.StringListChange)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  int fieldname_;
  ::google::protobuf::uint32 index_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_changes_2eproto();
  friend void protobuf_AssignDesc_changes_2eproto();
  friend void protobuf_ShutdownFile_changes_2eproto();

  void InitAsDefaultInstance();
  static Change_StringListChange* default_instance_;
};
// -------------------------------------------------------------------

class Change : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:roosha.Change) */ {
 public:
  Change();
  virtual ~Change();

  Change(const Change& from);

  inline Change& operator=(const Change& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Change& default_instance();

  enum ChangeDataCase {
    kNewSource = 3,
    kStringListChange = 4,
    CHANGEDATA_NOT_SET = 0,
  };

  void Swap(Change* other);

  // implements Message ----------------------------------------------

  inline Change* New() const { return New(NULL); }

  Change* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Change& from);
  void MergeFrom(const Change& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Change* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Change_StringListChange StringListChange;

  typedef Change_ChangeType ChangeType;
  static const ChangeType UNKNOWN =
    Change_ChangeType_UNKNOWN;
  static const ChangeType CHANGE_SOURCE =
    Change_ChangeType_CHANGE_SOURCE;
  static const ChangeType DELETE_CARD =
    Change_ChangeType_DELETE_CARD;
  static const ChangeType CREATE_CARD =
    Change_ChangeType_CREATE_CARD;
  static const ChangeType INSERT_ELEM =
    Change_ChangeType_INSERT_ELEM;
  static const ChangeType DELETE_ELEM =
    Change_ChangeType_DELETE_ELEM;
  static const ChangeType EDIT_ELEM =
    Change_ChangeType_EDIT_ELEM;
  static inline bool ChangeType_IsValid(int value) {
    return Change_ChangeType_IsValid(value);
  }
  static const ChangeType ChangeType_MIN =
    Change_ChangeType_ChangeType_MIN;
  static const ChangeType ChangeType_MAX =
    Change_ChangeType_ChangeType_MAX;
  static const int ChangeType_ARRAYSIZE =
    Change_ChangeType_ChangeType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ChangeType_descriptor() {
    return Change_ChangeType_descriptor();
  }
  static inline const ::std::string& ChangeType_Name(ChangeType value) {
    return Change_ChangeType_Name(value);
  }
  static inline bool ChangeType_Parse(const ::std::string& name,
      ChangeType* value) {
    return Change_ChangeType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .roosha.Change.ChangeType type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::roosha::Change_ChangeType type() const;
  void set_type(::roosha::Change_ChangeType value);

  // optional string cardId = 2;
  void clear_cardid();
  static const int kCardIdFieldNumber = 2;
  const ::std::string& cardid() const;
  void set_cardid(const ::std::string& value);
  void set_cardid(const char* value);
  void set_cardid(const char* value, size_t size);
  ::std::string* mutable_cardid();
  ::std::string* release_cardid();
  void set_allocated_cardid(::std::string* cardid);

  // optional string newSource = 3;
  private:
  bool has_newsource() const;
  public:
  void clear_newsource();
  static const int kNewSourceFieldNumber = 3;
  const ::std::string& newsource() const;
  void set_newsource(const ::std::string& value);
  void set_newsource(const char* value);
  void set_newsource(const char* value, size_t size);
  ::std::string* mutable_newsource();
  ::std::string* release_newsource();
  void set_allocated_newsource(::std::string* newsource);

  // optional .roosha.Change.StringListChange stringListChange = 4;
  bool has_stringlistchange() const;
  void clear_stringlistchange();
  static const int kStringListChangeFieldNumber = 4;
  const ::roosha::Change_StringListChange& stringlistchange() const;
  ::roosha::Change_StringListChange* mutable_stringlistchange();
  ::roosha::Change_StringListChange* release_stringlistchange();
  void set_allocated_stringlistchange(::roosha::Change_StringListChange* stringlistchange);

  ChangeDataCase changeData_case() const;
  // @@protoc_insertion_point(class_scope:roosha.Change)
 private:
  inline void set_has_newsource();
  inline void set_has_stringlistchange();

  inline bool has_changeData() const;
  void clear_changeData();
  inline void clear_has_changeData();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr cardid_;
  int type_;
  union ChangeDataUnion {
    ChangeDataUnion() {}
    ::google::protobuf::internal::ArenaStringPtr newsource_;
    ::roosha::Change_StringListChange* stringlistchange_;
  } changeData_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend void  protobuf_AddDesc_changes_2eproto();
  friend void protobuf_AssignDesc_changes_2eproto();
  friend void protobuf_ShutdownFile_changes_2eproto();

  void InitAsDefaultInstance();
  static Change* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Change_StringListChange

// optional .roosha.Change.StringListChange.Field fieldName = 1;
inline void Change_StringListChange::clear_fieldname() {
  fieldname_ = 0;
}
inline ::roosha::Change_StringListChange_Field Change_StringListChange::fieldname() const {
  // @@protoc_insertion_point(field_get:roosha.Change.StringListChange.fieldName)
  return static_cast< ::roosha::Change_StringListChange_Field >(fieldname_);
}
inline void Change_StringListChange::set_fieldname(::roosha::Change_StringListChange_Field value) {
  
  fieldname_ = value;
  // @@protoc_insertion_point(field_set:roosha.Change.StringListChange.fieldName)
}

// optional uint32 index = 2;
inline void Change_StringListChange::clear_index() {
  index_ = 0u;
}
inline ::google::protobuf::uint32 Change_StringListChange::index() const {
  // @@protoc_insertion_point(field_get:roosha.Change.StringListChange.index)
  return index_;
}
inline void Change_StringListChange::set_index(::google::protobuf::uint32 value) {
  
  index_ = value;
  // @@protoc_insertion_point(field_set:roosha.Change.StringListChange.index)
}

// optional string value = 3;
inline void Change_StringListChange::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Change_StringListChange::value() const {
  // @@protoc_insertion_point(field_get:roosha.Change.StringListChange.value)
  return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Change_StringListChange::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:roosha.Change.StringListChange.value)
}
inline void Change_StringListChange::set_value(const char* value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:roosha.Change.StringListChange.value)
}
inline void Change_StringListChange::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:roosha.Change.StringListChange.value)
}
inline ::std::string* Change_StringListChange::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:roosha.Change.StringListChange.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Change_StringListChange::release_value() {
  // @@protoc_insertion_point(field_release:roosha.Change.StringListChange.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Change_StringListChange::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:roosha.Change.StringListChange.value)
}

// -------------------------------------------------------------------

// Change

// optional .roosha.Change.ChangeType type = 1;
inline void Change::clear_type() {
  type_ = 0;
}
inline ::roosha::Change_ChangeType Change::type() const {
  // @@protoc_insertion_point(field_get:roosha.Change.type)
  return static_cast< ::roosha::Change_ChangeType >(type_);
}
inline void Change::set_type(::roosha::Change_ChangeType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:roosha.Change.type)
}

// optional string cardId = 2;
inline void Change::clear_cardid() {
  cardid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Change::cardid() const {
  // @@protoc_insertion_point(field_get:roosha.Change.cardId)
  return cardid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Change::set_cardid(const ::std::string& value) {
  
  cardid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:roosha.Change.cardId)
}
inline void Change::set_cardid(const char* value) {
  
  cardid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:roosha.Change.cardId)
}
inline void Change::set_cardid(const char* value, size_t size) {
  
  cardid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:roosha.Change.cardId)
}
inline ::std::string* Change::mutable_cardid() {
  
  // @@protoc_insertion_point(field_mutable:roosha.Change.cardId)
  return cardid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Change::release_cardid() {
  // @@protoc_insertion_point(field_release:roosha.Change.cardId)
  
  return cardid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Change::set_allocated_cardid(::std::string* cardid) {
  if (cardid != NULL) {
    
  } else {
    
  }
  cardid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cardid);
  // @@protoc_insertion_point(field_set_allocated:roosha.Change.cardId)
}

// optional string newSource = 3;
inline bool Change::has_newsource() const {
  return changeData_case() == kNewSource;
}
inline void Change::set_has_newsource() {
  _oneof_case_[0] = kNewSource;
}
inline void Change::clear_newsource() {
  if (has_newsource()) {
    changeData_.newsource_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_changeData();
  }
}
inline const ::std::string& Change::newsource() const {
  // @@protoc_insertion_point(field_get:roosha.Change.newSource)
  if (has_newsource()) {
    return changeData_.newsource_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void Change::set_newsource(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:roosha.Change.newSource)
  if (!has_newsource()) {
    clear_changeData();
    set_has_newsource();
    changeData_.newsource_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  changeData_.newsource_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:roosha.Change.newSource)
}
inline void Change::set_newsource(const char* value) {
  if (!has_newsource()) {
    clear_changeData();
    set_has_newsource();
    changeData_.newsource_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  changeData_.newsource_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:roosha.Change.newSource)
}
inline void Change::set_newsource(const char* value, size_t size) {
  if (!has_newsource()) {
    clear_changeData();
    set_has_newsource();
    changeData_.newsource_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  changeData_.newsource_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:roosha.Change.newSource)
}
inline ::std::string* Change::mutable_newsource() {
  if (!has_newsource()) {
    clear_changeData();
    set_has_newsource();
    changeData_.newsource_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:roosha.Change.newSource)
  return changeData_.newsource_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Change::release_newsource() {
  // @@protoc_insertion_point(field_release:roosha.Change.newSource)
  if (has_newsource()) {
    clear_has_changeData();
    return changeData_.newsource_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void Change::set_allocated_newsource(::std::string* newsource) {
  if (!has_newsource()) {
    changeData_.newsource_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_changeData();
  if (newsource != NULL) {
    set_has_newsource();
    changeData_.newsource_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        newsource);
  }
  // @@protoc_insertion_point(field_set_allocated:roosha.Change.newSource)
}

// optional .roosha.Change.StringListChange stringListChange = 4;
inline bool Change::has_stringlistchange() const {
  return changeData_case() == kStringListChange;
}
inline void Change::set_has_stringlistchange() {
  _oneof_case_[0] = kStringListChange;
}
inline void Change::clear_stringlistchange() {
  if (has_stringlistchange()) {
    delete changeData_.stringlistchange_;
    clear_has_changeData();
  }
}
inline  const ::roosha::Change_StringListChange& Change::stringlistchange() const {
  // @@protoc_insertion_point(field_get:roosha.Change.stringListChange)
  return has_stringlistchange()
      ? *changeData_.stringlistchange_
      : ::roosha::Change_StringListChange::default_instance();
}
inline ::roosha::Change_StringListChange* Change::mutable_stringlistchange() {
  if (!has_stringlistchange()) {
    clear_changeData();
    set_has_stringlistchange();
    changeData_.stringlistchange_ = new ::roosha::Change_StringListChange;
  }
  // @@protoc_insertion_point(field_mutable:roosha.Change.stringListChange)
  return changeData_.stringlistchange_;
}
inline ::roosha::Change_StringListChange* Change::release_stringlistchange() {
  // @@protoc_insertion_point(field_release:roosha.Change.stringListChange)
  if (has_stringlistchange()) {
    clear_has_changeData();
    ::roosha::Change_StringListChange* temp = changeData_.stringlistchange_;
    changeData_.stringlistchange_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Change::set_allocated_stringlistchange(::roosha::Change_StringListChange* stringlistchange) {
  clear_changeData();
  if (stringlistchange) {
    set_has_stringlistchange();
    changeData_.stringlistchange_ = stringlistchange;
  }
  // @@protoc_insertion_point(field_set_allocated:roosha.Change.stringListChange)
}

inline bool Change::has_changeData() const {
  return changeData_case() != CHANGEDATA_NOT_SET;
}
inline void Change::clear_has_changeData() {
  _oneof_case_[0] = CHANGEDATA_NOT_SET;
}
inline Change::ChangeDataCase Change::changeData_case() const {
  return Change::ChangeDataCase(_oneof_case_[0]);
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace roosha

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::roosha::Change_StringListChange_Field> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::roosha::Change_StringListChange_Field>() {
  return ::roosha::Change_StringListChange_Field_descriptor();
}
template <> struct is_proto_enum< ::roosha::Change_ChangeType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::roosha::Change_ChangeType>() {
  return ::roosha::Change_ChangeType_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_changes_2eproto__INCLUDED
