// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: changes.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "changes.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace roosha {

namespace {

const ::google::protobuf::Descriptor* Change_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Change_reflection_ = NULL;
struct ChangeOneofInstance {
  ::google::protobuf::internal::ArenaStringPtr newsource_;
  const ::roosha::Change_StringListChange* stringlistchange_;
}* Change_default_oneof_instance_ = NULL;
const ::google::protobuf::Descriptor* Change_StringListChange_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Change_StringListChange_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* Change_StringListChange_Field_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* Change_ChangeType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_changes_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_changes_2eproto() {
  protobuf_AddDesc_changes_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "changes.proto");
  GOOGLE_CHECK(file != NULL);
  Change_descriptor_ = file->message_type(0);
  static const int Change_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Change, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Change, cardid_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Change_default_oneof_instance_, newsource_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Change_default_oneof_instance_, stringlistchange_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Change, changeData_),
  };
  Change_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Change_descriptor_,
      Change::default_instance_,
      Change_offsets_,
      -1,
      -1,
      -1,
      Change_default_oneof_instance_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Change, _oneof_case_[0]),
      sizeof(Change),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Change, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Change, _is_default_instance_));
  Change_StringListChange_descriptor_ = Change_descriptor_->nested_type(0);
  static const int Change_StringListChange_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Change_StringListChange, fieldname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Change_StringListChange, index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Change_StringListChange, value_),
  };
  Change_StringListChange_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Change_StringListChange_descriptor_,
      Change_StringListChange::default_instance_,
      Change_StringListChange_offsets_,
      -1,
      -1,
      -1,
      sizeof(Change_StringListChange),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Change_StringListChange, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Change_StringListChange, _is_default_instance_));
  Change_StringListChange_Field_descriptor_ = Change_StringListChange_descriptor_->enum_type(0);
  Change_ChangeType_descriptor_ = Change_descriptor_->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_changes_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Change_descriptor_, &Change::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Change_StringListChange_descriptor_, &Change_StringListChange::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_changes_2eproto() {
  delete Change::default_instance_;
  delete Change_default_oneof_instance_;
  delete Change_reflection_;
  delete Change_StringListChange::default_instance_;
  delete Change_StringListChange_reflection_;
}

void protobuf_AddDesc_changes_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_changes_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\rchanges.proto\022\006roosha\"\276\003\n\006Change\022\'\n\004ty"
    "pe\030\001 \001(\0162\031.roosha.Change.ChangeType\022\016\n\006c"
    "ardId\030\002 \001(\t\022\023\n\tnewSource\030\003 \001(\tH\000\022;\n\020stri"
    "ngListChange\030\004 \001(\0132\037.roosha.Change.Strin"
    "gListChangeH\000\032\231\001\n\020StringListChange\0228\n\tfi"
    "eldName\030\001 \001(\0162%.roosha.Change.StringList"
    "Change.Field\022\r\n\005index\030\002 \001(\r\022\r\n\005value\030\003 \001"
    "(\t\"-\n\005Field\022\013\n\007UNKNOWN\020\000\022\n\n\006TARGET\020\001\022\013\n\007"
    "EXAMPLE\020\002\"\177\n\nChangeType\022\013\n\007UNKNOWN\020\000\022\021\n\r"
    "CHANGE_SOURCE\020\001\022\017\n\013DELETE_CARD\020\002\022\017\n\013CREA"
    "TE_CARD\020\003\022\017\n\013INSERT_ELEM\020\004\022\017\n\013DELETE_ELE"
    "M\020\005\022\r\n\tEDIT_ELEM\020\006B\014\n\nchangeDataB,\n\027com."
    "github.roosha.protoB\014ChangesProtoH\001\370\001\000b\006"
    "proto3", 526);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "changes.proto", &protobuf_RegisterTypes);
  Change::default_instance_ = new Change();
  Change_default_oneof_instance_ = new ChangeOneofInstance();
  Change_StringListChange::default_instance_ = new Change_StringListChange();
  Change::default_instance_->InitAsDefaultInstance();
  Change_StringListChange::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_changes_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_changes_2eproto {
  StaticDescriptorInitializer_changes_2eproto() {
    protobuf_AddDesc_changes_2eproto();
  }
} static_descriptor_initializer_changes_2eproto_;

// ===================================================================

const ::google::protobuf::EnumDescriptor* Change_ChangeType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Change_ChangeType_descriptor_;
}
bool Change_ChangeType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Change_ChangeType Change::UNKNOWN;
const Change_ChangeType Change::CHANGE_SOURCE;
const Change_ChangeType Change::DELETE_CARD;
const Change_ChangeType Change::CREATE_CARD;
const Change_ChangeType Change::INSERT_ELEM;
const Change_ChangeType Change::DELETE_ELEM;
const Change_ChangeType Change::EDIT_ELEM;
const Change_ChangeType Change::ChangeType_MIN;
const Change_ChangeType Change::ChangeType_MAX;
const int Change::ChangeType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Change_StringListChange_Field_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Change_StringListChange_Field_descriptor_;
}
bool Change_StringListChange_Field_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Change_StringListChange_Field Change_StringListChange::UNKNOWN;
const Change_StringListChange_Field Change_StringListChange::TARGET;
const Change_StringListChange_Field Change_StringListChange::EXAMPLE;
const Change_StringListChange_Field Change_StringListChange::Field_MIN;
const Change_StringListChange_Field Change_StringListChange::Field_MAX;
const int Change_StringListChange::Field_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Change_StringListChange::kFieldNameFieldNumber;
const int Change_StringListChange::kIndexFieldNumber;
const int Change_StringListChange::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Change_StringListChange::Change_StringListChange()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:roosha.Change.StringListChange)
}

void Change_StringListChange::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Change_StringListChange::Change_StringListChange(const Change_StringListChange& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:roosha.Change.StringListChange)
}

void Change_StringListChange::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  fieldname_ = 0;
  index_ = 0u;
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Change_StringListChange::~Change_StringListChange() {
  // @@protoc_insertion_point(destructor:roosha.Change.StringListChange)
  SharedDtor();
}

void Change_StringListChange::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Change_StringListChange::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Change_StringListChange::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Change_StringListChange_descriptor_;
}

const Change_StringListChange& Change_StringListChange::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_changes_2eproto();
  return *default_instance_;
}

Change_StringListChange* Change_StringListChange::default_instance_ = NULL;

Change_StringListChange* Change_StringListChange::New(::google::protobuf::Arena* arena) const {
  Change_StringListChange* n = new Change_StringListChange;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Change_StringListChange::Clear() {
// @@protoc_insertion_point(message_clear_start:roosha.Change.StringListChange)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Change_StringListChange, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Change_StringListChange*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(fieldname_, index_);
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool Change_StringListChange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:roosha.Change.StringListChange)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .roosha.Change.StringListChange.Field fieldName = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_fieldname(static_cast< ::roosha::Change_StringListChange_Field >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_index;
        break;
      }

      // optional uint32 index = 2;
      case 2: {
        if (tag == 16) {
         parse_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &index_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_value;
        break;
      }

      // optional string value = 3;
      case 3: {
        if (tag == 26) {
         parse_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), this->value().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "roosha.Change.StringListChange.value"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:roosha.Change.StringListChange)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:roosha.Change.StringListChange)
  return false;
#undef DO_
}

void Change_StringListChange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:roosha.Change.StringListChange)
  // optional .roosha.Change.StringListChange.Field fieldName = 1;
  if (this->fieldname() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->fieldname(), output);
  }

  // optional uint32 index = 2;
  if (this->index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->index(), output);
  }

  // optional string value = 3;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "roosha.Change.StringListChange.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->value(), output);
  }

  // @@protoc_insertion_point(serialize_end:roosha.Change.StringListChange)
}

::google::protobuf::uint8* Change_StringListChange::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:roosha.Change.StringListChange)
  // optional .roosha.Change.StringListChange.Field fieldName = 1;
  if (this->fieldname() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->fieldname(), target);
  }

  // optional uint32 index = 2;
  if (this->index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->index(), target);
  }

  // optional string value = 3;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "roosha.Change.StringListChange.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->value(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:roosha.Change.StringListChange)
  return target;
}

int Change_StringListChange::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:roosha.Change.StringListChange)
  int total_size = 0;

  // optional .roosha.Change.StringListChange.Field fieldName = 1;
  if (this->fieldname() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->fieldname());
  }

  // optional uint32 index = 2;
  if (this->index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->index());
  }

  // optional string value = 3;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Change_StringListChange::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:roosha.Change.StringListChange)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Change_StringListChange* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Change_StringListChange>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:roosha.Change.StringListChange)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:roosha.Change.StringListChange)
    MergeFrom(*source);
  }
}

void Change_StringListChange::MergeFrom(const Change_StringListChange& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:roosha.Change.StringListChange)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.fieldname() != 0) {
    set_fieldname(from.fieldname());
  }
  if (from.index() != 0) {
    set_index(from.index());
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
}

void Change_StringListChange::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:roosha.Change.StringListChange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Change_StringListChange::CopyFrom(const Change_StringListChange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:roosha.Change.StringListChange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Change_StringListChange::IsInitialized() const {

  return true;
}

void Change_StringListChange::Swap(Change_StringListChange* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Change_StringListChange::InternalSwap(Change_StringListChange* other) {
  std::swap(fieldname_, other->fieldname_);
  std::swap(index_, other->index_);
  value_.Swap(&other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Change_StringListChange::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Change_StringListChange_descriptor_;
  metadata.reflection = Change_StringListChange_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Change::kTypeFieldNumber;
const int Change::kCardIdFieldNumber;
const int Change::kNewSourceFieldNumber;
const int Change::kStringListChangeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Change::Change()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:roosha.Change)
}

void Change::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  Change_default_oneof_instance_->newsource_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  Change_default_oneof_instance_->stringlistchange_ = const_cast< ::roosha::Change_StringListChange*>(&::roosha::Change_StringListChange::default_instance());
}

Change::Change(const Change& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:roosha.Change)
}

void Change::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  type_ = 0;
  cardid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_changeData();
}

Change::~Change() {
  // @@protoc_insertion_point(destructor:roosha.Change)
  SharedDtor();
}

void Change::SharedDtor() {
  cardid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_changeData()) {
    clear_changeData();
  }
  if (this != default_instance_) {
  }
}

void Change::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Change::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Change_descriptor_;
}

const Change& Change::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_changes_2eproto();
  return *default_instance_;
}

Change* Change::default_instance_ = NULL;

Change* Change::New(::google::protobuf::Arena* arena) const {
  Change* n = new Change;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Change::clear_changeData() {
// @@protoc_insertion_point(one_of_clear_start:roosha.Change)
  switch(changeData_case()) {
    case kNewSource: {
      changeData_.newsource_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kStringListChange: {
      delete changeData_.stringlistchange_;
      break;
    }
    case CHANGEDATA_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = CHANGEDATA_NOT_SET;
}


void Change::Clear() {
// @@protoc_insertion_point(message_clear_start:roosha.Change)
  type_ = 0;
  cardid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_changeData();
}

bool Change::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:roosha.Change)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .roosha.Change.ChangeType type = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::roosha::Change_ChangeType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_cardId;
        break;
      }

      // optional string cardId = 2;
      case 2: {
        if (tag == 18) {
         parse_cardId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cardid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cardid().data(), this->cardid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "roosha.Change.cardId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_newSource;
        break;
      }

      // optional string newSource = 3;
      case 3: {
        if (tag == 26) {
         parse_newSource:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_newsource()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->newsource().data(), this->newsource().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "roosha.Change.newSource"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_stringListChange;
        break;
      }

      // optional .roosha.Change.StringListChange stringListChange = 4;
      case 4: {
        if (tag == 34) {
         parse_stringListChange:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_stringlistchange()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:roosha.Change)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:roosha.Change)
  return false;
#undef DO_
}

void Change::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:roosha.Change)
  // optional .roosha.Change.ChangeType type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // optional string cardId = 2;
  if (this->cardid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cardid().data(), this->cardid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "roosha.Change.cardId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->cardid(), output);
  }

  // optional string newSource = 3;
  if (has_newsource()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->newsource().data(), this->newsource().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "roosha.Change.newSource");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->newsource(), output);
  }

  // optional .roosha.Change.StringListChange stringListChange = 4;
  if (has_stringlistchange()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *changeData_.stringlistchange_, output);
  }

  // @@protoc_insertion_point(serialize_end:roosha.Change)
}

::google::protobuf::uint8* Change::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:roosha.Change)
  // optional .roosha.Change.ChangeType type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // optional string cardId = 2;
  if (this->cardid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cardid().data(), this->cardid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "roosha.Change.cardId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->cardid(), target);
  }

  // optional string newSource = 3;
  if (has_newsource()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->newsource().data(), this->newsource().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "roosha.Change.newSource");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->newsource(), target);
  }

  // optional .roosha.Change.StringListChange stringListChange = 4;
  if (has_stringlistchange()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *changeData_.stringlistchange_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:roosha.Change)
  return target;
}

int Change::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:roosha.Change)
  int total_size = 0;

  // optional .roosha.Change.ChangeType type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // optional string cardId = 2;
  if (this->cardid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cardid());
  }

  switch (changeData_case()) {
    // optional string newSource = 3;
    case kNewSource: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->newsource());
      break;
    }
    // optional .roosha.Change.StringListChange stringListChange = 4;
    case kStringListChange: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *changeData_.stringlistchange_);
      break;
    }
    case CHANGEDATA_NOT_SET: {
      break;
    }
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Change::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:roosha.Change)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Change* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Change>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:roosha.Change)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:roosha.Change)
    MergeFrom(*source);
  }
}

void Change::MergeFrom(const Change& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:roosha.Change)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  switch (from.changeData_case()) {
    case kNewSource: {
      set_newsource(from.newsource());
      break;
    }
    case kStringListChange: {
      mutable_stringlistchange()->::roosha::Change_StringListChange::MergeFrom(from.stringlistchange());
      break;
    }
    case CHANGEDATA_NOT_SET: {
      break;
    }
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.cardid().size() > 0) {

    cardid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cardid_);
  }
}

void Change::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:roosha.Change)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Change::CopyFrom(const Change& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:roosha.Change)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Change::IsInitialized() const {

  return true;
}

void Change::Swap(Change* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Change::InternalSwap(Change* other) {
  std::swap(type_, other->type_);
  cardid_.Swap(&other->cardid_);
  std::swap(changeData_, other->changeData_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Change::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Change_descriptor_;
  metadata.reflection = Change_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Change_StringListChange

// optional .roosha.Change.StringListChange.Field fieldName = 1;
void Change_StringListChange::clear_fieldname() {
  fieldname_ = 0;
}
 ::roosha::Change_StringListChange_Field Change_StringListChange::fieldname() const {
  // @@protoc_insertion_point(field_get:roosha.Change.StringListChange.fieldName)
  return static_cast< ::roosha::Change_StringListChange_Field >(fieldname_);
}
 void Change_StringListChange::set_fieldname(::roosha::Change_StringListChange_Field value) {
  
  fieldname_ = value;
  // @@protoc_insertion_point(field_set:roosha.Change.StringListChange.fieldName)
}

// optional uint32 index = 2;
void Change_StringListChange::clear_index() {
  index_ = 0u;
}
 ::google::protobuf::uint32 Change_StringListChange::index() const {
  // @@protoc_insertion_point(field_get:roosha.Change.StringListChange.index)
  return index_;
}
 void Change_StringListChange::set_index(::google::protobuf::uint32 value) {
  
  index_ = value;
  // @@protoc_insertion_point(field_set:roosha.Change.StringListChange.index)
}

// optional string value = 3;
void Change_StringListChange::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Change_StringListChange::value() const {
  // @@protoc_insertion_point(field_get:roosha.Change.StringListChange.value)
  return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Change_StringListChange::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:roosha.Change.StringListChange.value)
}
 void Change_StringListChange::set_value(const char* value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:roosha.Change.StringListChange.value)
}
 void Change_StringListChange::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:roosha.Change.StringListChange.value)
}
 ::std::string* Change_StringListChange::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:roosha.Change.StringListChange.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Change_StringListChange::release_value() {
  // @@protoc_insertion_point(field_release:roosha.Change.StringListChange.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Change_StringListChange::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:roosha.Change.StringListChange.value)
}

// -------------------------------------------------------------------

// Change

// optional .roosha.Change.ChangeType type = 1;
void Change::clear_type() {
  type_ = 0;
}
 ::roosha::Change_ChangeType Change::type() const {
  // @@protoc_insertion_point(field_get:roosha.Change.type)
  return static_cast< ::roosha::Change_ChangeType >(type_);
}
 void Change::set_type(::roosha::Change_ChangeType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:roosha.Change.type)
}

// optional string cardId = 2;
void Change::clear_cardid() {
  cardid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Change::cardid() const {
  // @@protoc_insertion_point(field_get:roosha.Change.cardId)
  return cardid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Change::set_cardid(const ::std::string& value) {
  
  cardid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:roosha.Change.cardId)
}
 void Change::set_cardid(const char* value) {
  
  cardid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:roosha.Change.cardId)
}
 void Change::set_cardid(const char* value, size_t size) {
  
  cardid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:roosha.Change.cardId)
}
 ::std::string* Change::mutable_cardid() {
  
  // @@protoc_insertion_point(field_mutable:roosha.Change.cardId)
  return cardid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Change::release_cardid() {
  // @@protoc_insertion_point(field_release:roosha.Change.cardId)
  
  return cardid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Change::set_allocated_cardid(::std::string* cardid) {
  if (cardid != NULL) {
    
  } else {
    
  }
  cardid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cardid);
  // @@protoc_insertion_point(field_set_allocated:roosha.Change.cardId)
}

// optional string newSource = 3;
bool Change::has_newsource() const {
  return changeData_case() == kNewSource;
}
void Change::set_has_newsource() {
  _oneof_case_[0] = kNewSource;
}
void Change::clear_newsource() {
  if (has_newsource()) {
    changeData_.newsource_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_changeData();
  }
}
 const ::std::string& Change::newsource() const {
  // @@protoc_insertion_point(field_get:roosha.Change.newSource)
  if (has_newsource()) {
    return changeData_.newsource_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
 void Change::set_newsource(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:roosha.Change.newSource)
  if (!has_newsource()) {
    clear_changeData();
    set_has_newsource();
    changeData_.newsource_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  changeData_.newsource_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:roosha.Change.newSource)
}
 void Change::set_newsource(const char* value) {
  if (!has_newsource()) {
    clear_changeData();
    set_has_newsource();
    changeData_.newsource_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  changeData_.newsource_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:roosha.Change.newSource)
}
 void Change::set_newsource(const char* value, size_t size) {
  if (!has_newsource()) {
    clear_changeData();
    set_has_newsource();
    changeData_.newsource_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  changeData_.newsource_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:roosha.Change.newSource)
}
 ::std::string* Change::mutable_newsource() {
  if (!has_newsource()) {
    clear_changeData();
    set_has_newsource();
    changeData_.newsource_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:roosha.Change.newSource)
  return changeData_.newsource_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Change::release_newsource() {
  // @@protoc_insertion_point(field_release:roosha.Change.newSource)
  if (has_newsource()) {
    clear_has_changeData();
    return changeData_.newsource_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
 void Change::set_allocated_newsource(::std::string* newsource) {
  if (!has_newsource()) {
    changeData_.newsource_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_changeData();
  if (newsource != NULL) {
    set_has_newsource();
    changeData_.newsource_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        newsource);
  }
  // @@protoc_insertion_point(field_set_allocated:roosha.Change.newSource)
}

// optional .roosha.Change.StringListChange stringListChange = 4;
bool Change::has_stringlistchange() const {
  return changeData_case() == kStringListChange;
}
void Change::set_has_stringlistchange() {
  _oneof_case_[0] = kStringListChange;
}
void Change::clear_stringlistchange() {
  if (has_stringlistchange()) {
    delete changeData_.stringlistchange_;
    clear_has_changeData();
  }
}
 const ::roosha::Change_StringListChange& Change::stringlistchange() const {
  // @@protoc_insertion_point(field_get:roosha.Change.stringListChange)
  return has_stringlistchange()
      ? *changeData_.stringlistchange_
      : ::roosha::Change_StringListChange::default_instance();
}
::roosha::Change_StringListChange* Change::mutable_stringlistchange() {
  if (!has_stringlistchange()) {
    clear_changeData();
    set_has_stringlistchange();
    changeData_.stringlistchange_ = new ::roosha::Change_StringListChange;
  }
  // @@protoc_insertion_point(field_mutable:roosha.Change.stringListChange)
  return changeData_.stringlistchange_;
}
::roosha::Change_StringListChange* Change::release_stringlistchange() {
  // @@protoc_insertion_point(field_release:roosha.Change.stringListChange)
  if (has_stringlistchange()) {
    clear_has_changeData();
    ::roosha::Change_StringListChange* temp = changeData_.stringlistchange_;
    changeData_.stringlistchange_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Change::set_allocated_stringlistchange(::roosha::Change_StringListChange* stringlistchange) {
  clear_changeData();
  if (stringlistchange) {
    set_has_stringlistchange();
    changeData_.stringlistchange_ = stringlistchange;
  }
  // @@protoc_insertion_point(field_set_allocated:roosha.Change.stringListChange)
}

bool Change::has_changeData() const {
  return changeData_case() != CHANGEDATA_NOT_SET;
}
void Change::clear_has_changeData() {
  _oneof_case_[0] = CHANGEDATA_NOT_SET;
}
Change::ChangeDataCase Change::changeData_case() const {
  return Change::ChangeDataCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace roosha

// @@protoc_insertion_point(global_scope)
