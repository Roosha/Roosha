// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: changes.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "changes.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace roosha {
class ChangeDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Change> {
  public:
  const ::roosha::CardChange* cardchange_;
  const ::roosha::Scrutiny* scrutiny_;
} _Change_default_instance_;
class CardChange_CreateCardDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CardChange_CreateCard> {
} _CardChange_CreateCard_default_instance_;
class CardChange_DeleteCardDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CardChange_DeleteCard> {
} _CardChange_DeleteCard_default_instance_;
class CardChange_ChangeSourceDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CardChange_ChangeSource> {
} _CardChange_ChangeSource_default_instance_;
class CardChange_InsertElemDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CardChange_InsertElem> {
} _CardChange_InsertElem_default_instance_;
class CardChange_DeleteElemDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CardChange_DeleteElem> {
} _CardChange_DeleteElem_default_instance_;
class CardChange_EditElemDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CardChange_EditElem> {
} _CardChange_EditElem_default_instance_;
class CardChangeDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CardChange> {
  public:
  const ::roosha::CardChange_CreateCard* createcard_;
  const ::roosha::CardChange_DeleteCard* deletecard_;
  const ::roosha::CardChange_ChangeSource* changesource_;
  const ::roosha::CardChange_InsertElem* insertelem_;
  const ::roosha::CardChange_DeleteElem* deleteelem_;
  const ::roosha::CardChange_EditElem* editelem_;
} _CardChange_default_instance_;

namespace protobuf_changes_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[8];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Change, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Change, _oneof_case_[0]),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_Change_default_instance_), cardchange_),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_Change_default_instance_), scrutiny_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Change, change_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CardChange_CreateCard, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CardChange_DeleteCard, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CardChange_ChangeSource, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CardChange_ChangeSource, newsource_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CardChange_InsertElem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CardChange_InsertElem, field_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CardChange_InsertElem, index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CardChange_InsertElem, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CardChange_DeleteElem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CardChange_DeleteElem, field_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CardChange_DeleteElem, index_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CardChange_EditElem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CardChange_EditElem, field_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CardChange_EditElem, position_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CardChange_EditElem, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CardChange, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CardChange, _oneof_case_[0]),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CardChange, cardid_),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_CardChange_default_instance_), createcard_),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_CardChange_default_instance_), deletecard_),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_CardChange_default_instance_), changesource_),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_CardChange_default_instance_), insertelem_),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_CardChange_default_instance_), deleteelem_),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_CardChange_default_instance_), editelem_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CardChange, change_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(Change)},
  { 7, -1, sizeof(CardChange_CreateCard)},
  { 11, -1, sizeof(CardChange_DeleteCard)},
  { 15, -1, sizeof(CardChange_ChangeSource)},
  { 20, -1, sizeof(CardChange_InsertElem)},
  { 27, -1, sizeof(CardChange_DeleteElem)},
  { 33, -1, sizeof(CardChange_EditElem)},
  { 40, -1, sizeof(CardChange)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_Change_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CardChange_CreateCard_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CardChange_DeleteCard_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CardChange_ChangeSource_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CardChange_InsertElem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CardChange_DeleteElem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CardChange_EditElem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CardChange_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "changes.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 8);
}

}  // namespace

void TableStruct::Shutdown() {
  _Change_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _CardChange_CreateCard_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _CardChange_DeleteCard_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _CardChange_ChangeSource_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _CardChange_InsertElem_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _CardChange_DeleteElem_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _CardChange_EditElem_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _CardChange_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::roosha::protobuf_learning_2eproto::InitDefaults();
  _Change_default_instance_.DefaultConstruct();
  _CardChange_CreateCard_default_instance_.DefaultConstruct();
  _CardChange_DeleteCard_default_instance_.DefaultConstruct();
  _CardChange_ChangeSource_default_instance_.DefaultConstruct();
  _CardChange_InsertElem_default_instance_.DefaultConstruct();
  _CardChange_DeleteElem_default_instance_.DefaultConstruct();
  _CardChange_EditElem_default_instance_.DefaultConstruct();
  _CardChange_default_instance_.DefaultConstruct();
  _Change_default_instance_.cardchange_ = const_cast< ::roosha::CardChange*>(
      ::roosha::CardChange::internal_default_instance());
  _Change_default_instance_.scrutiny_ = const_cast< ::roosha::Scrutiny*>(
      ::roosha::Scrutiny::internal_default_instance());
  _CardChange_default_instance_.createcard_ = const_cast< ::roosha::CardChange_CreateCard*>(
      ::roosha::CardChange_CreateCard::internal_default_instance());
  _CardChange_default_instance_.deletecard_ = const_cast< ::roosha::CardChange_DeleteCard*>(
      ::roosha::CardChange_DeleteCard::internal_default_instance());
  _CardChange_default_instance_.changesource_ = const_cast< ::roosha::CardChange_ChangeSource*>(
      ::roosha::CardChange_ChangeSource::internal_default_instance());
  _CardChange_default_instance_.insertelem_ = const_cast< ::roosha::CardChange_InsertElem*>(
      ::roosha::CardChange_InsertElem::internal_default_instance());
  _CardChange_default_instance_.deleteelem_ = const_cast< ::roosha::CardChange_DeleteElem*>(
      ::roosha::CardChange_DeleteElem::internal_default_instance());
  _CardChange_default_instance_.editelem_ = const_cast< ::roosha::CardChange_EditElem*>(
      ::roosha::CardChange_EditElem::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\rchanges.proto\022\006roosha\032\016learning.proto\""
      "b\n\006Change\022(\n\ncardChange\030\001 \001(\0132\022.roosha.C"
      "ardChangeH\000\022$\n\010scrutiny\030\002 \001(\0132\020.roosha.S"
      "crutinyH\000B\010\n\006change\"\303\005\n\nCardChange\022\016\n\006ca"
      "rdId\030\001 \001(\t\0223\n\ncreateCard\030\002 \001(\0132\035.roosha."
      "CardChange.CreateCardH\000\0223\n\ndeleteCard\030\003 "
      "\001(\0132\035.roosha.CardChange.DeleteCardH\000\0227\n\014"
      "changeSource\030\004 \001(\0132\037.roosha.CardChange.C"
      "hangeSourceH\000\0223\n\ninsertElem\030\005 \001(\0132\035.roos"
      "ha.CardChange.InsertElemH\000\0223\n\ndeleteElem"
      "\030\006 \001(\0132\035.roosha.CardChange.DeleteElemH\000\022"
      "/\n\010editElem\030\007 \001(\0132\033.roosha.CardChange.Ed"
      "itElemH\000\032\014\n\nCreateCard\032\014\n\nDeleteCard\032!\n\014"
      "ChangeSource\022\021\n\tnewSource\030\001 \001(\t\032S\n\nInser"
      "tElem\022\'\n\005field\030\001 \001(\0162\030.roosha.CardChange"
      ".Field\022\r\n\005index\030\002 \001(\014\022\r\n\005value\030\003 \001(\t\032D\n\n"
      "DeleteElem\022\'\n\005field\030\001 \001(\0162\030.roosha.CardC"
      "hange.Field\022\r\n\005index\030\002 \001(\014\032T\n\010EditElem\022\'"
      "\n\005field\030\001 \001(\0162\030.roosha.CardChange.Field\022"
      "\020\n\010position\030\002 \001(\014\022\r\n\005value\030\003 \001(\t\"-\n\005Fiel"
      "d\022\013\n\007UNKNOWN\020\000\022\n\n\006TARGET\020\001\022\013\n\007EXAMPLE\020\002B"
      "\010\n\006changeB,\n\027com.github.roosha.protoB\014Ch"
      "angesProtoH\001\370\001\000b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 903);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "changes.proto", &protobuf_RegisterTypes);
  ::roosha::protobuf_learning_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_changes_2eproto

const ::google::protobuf::EnumDescriptor* CardChange_Field_descriptor() {
  protobuf_changes_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_changes_2eproto::file_level_enum_descriptors[0];
}
bool CardChange_Field_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CardChange_Field CardChange::UNKNOWN;
const CardChange_Field CardChange::TARGET;
const CardChange_Field CardChange::EXAMPLE;
const CardChange_Field CardChange::Field_MIN;
const CardChange_Field CardChange::Field_MAX;
const int CardChange::Field_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Change::kCardChangeFieldNumber;
const int Change::kScrutinyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Change::Change()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_changes_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:roosha.Change)
}
Change::Change(const Change& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_change();
  switch (from.change_case()) {
    case kCardChange: {
      mutable_cardchange()->::roosha::CardChange::MergeFrom(from.cardchange());
      break;
    }
    case kScrutiny: {
      mutable_scrutiny()->::roosha::Scrutiny::MergeFrom(from.scrutiny());
      break;
    }
    case CHANGE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:roosha.Change)
}

void Change::SharedCtor() {
  clear_has_change();
  _cached_size_ = 0;
}

Change::~Change() {
  // @@protoc_insertion_point(destructor:roosha.Change)
  SharedDtor();
}

void Change::SharedDtor() {
  if (has_change()) {
    clear_change();
  }
}

void Change::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Change::descriptor() {
  protobuf_changes_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_changes_2eproto::file_level_metadata[0].descriptor;
}

const Change& Change::default_instance() {
  protobuf_changes_2eproto::InitDefaults();
  return *internal_default_instance();
}

Change* Change::New(::google::protobuf::Arena* arena) const {
  Change* n = new Change;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Change::clear_change() {
// @@protoc_insertion_point(one_of_clear_start:roosha.Change)
  switch (change_case()) {
    case kCardChange: {
      delete change_.cardchange_;
      break;
    }
    case kScrutiny: {
      delete change_.scrutiny_;
      break;
    }
    case CHANGE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = CHANGE_NOT_SET;
}


void Change::Clear() {
// @@protoc_insertion_point(message_clear_start:roosha.Change)
  clear_change();
}

bool Change::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:roosha.Change)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .roosha.CardChange cardChange = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_cardchange()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .roosha.Scrutiny scrutiny = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_scrutiny()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:roosha.Change)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:roosha.Change)
  return false;
#undef DO_
}

void Change::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:roosha.Change)
  // .roosha.CardChange cardChange = 1;
  if (has_cardchange()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *change_.cardchange_, output);
  }

  // .roosha.Scrutiny scrutiny = 2;
  if (has_scrutiny()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *change_.scrutiny_, output);
  }

  // @@protoc_insertion_point(serialize_end:roosha.Change)
}

::google::protobuf::uint8* Change::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:roosha.Change)
  // .roosha.CardChange cardChange = 1;
  if (has_cardchange()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *change_.cardchange_, false, target);
  }

  // .roosha.Scrutiny scrutiny = 2;
  if (has_scrutiny()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *change_.scrutiny_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:roosha.Change)
  return target;
}

size_t Change::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:roosha.Change)
  size_t total_size = 0;

  switch (change_case()) {
    // .roosha.CardChange cardChange = 1;
    case kCardChange: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *change_.cardchange_);
      break;
    }
    // .roosha.Scrutiny scrutiny = 2;
    case kScrutiny: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *change_.scrutiny_);
      break;
    }
    case CHANGE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Change::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:roosha.Change)
  GOOGLE_DCHECK_NE(&from, this);
  const Change* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Change>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:roosha.Change)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:roosha.Change)
    MergeFrom(*source);
  }
}

void Change::MergeFrom(const Change& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:roosha.Change)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  switch (from.change_case()) {
    case kCardChange: {
      mutable_cardchange()->::roosha::CardChange::MergeFrom(from.cardchange());
      break;
    }
    case kScrutiny: {
      mutable_scrutiny()->::roosha::Scrutiny::MergeFrom(from.scrutiny());
      break;
    }
    case CHANGE_NOT_SET: {
      break;
    }
  }
}

void Change::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:roosha.Change)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Change::CopyFrom(const Change& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:roosha.Change)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Change::IsInitialized() const {
  return true;
}

void Change::Swap(Change* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Change::InternalSwap(Change* other) {
  std::swap(change_, other->change_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Change::GetMetadata() const {
  protobuf_changes_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_changes_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Change

// .roosha.CardChange cardChange = 1;
bool Change::has_cardchange() const {
  return change_case() == kCardChange;
}
void Change::set_has_cardchange() {
  _oneof_case_[0] = kCardChange;
}
void Change::clear_cardchange() {
  if (has_cardchange()) {
    delete change_.cardchange_;
    clear_has_change();
  }
}
 const ::roosha::CardChange& Change::cardchange() const {
  // @@protoc_insertion_point(field_get:roosha.Change.cardChange)
  return has_cardchange()
      ? *change_.cardchange_
      : ::roosha::CardChange::default_instance();
}
::roosha::CardChange* Change::mutable_cardchange() {
  if (!has_cardchange()) {
    clear_change();
    set_has_cardchange();
    change_.cardchange_ = new ::roosha::CardChange;
  }
  // @@protoc_insertion_point(field_mutable:roosha.Change.cardChange)
  return change_.cardchange_;
}
::roosha::CardChange* Change::release_cardchange() {
  // @@protoc_insertion_point(field_release:roosha.Change.cardChange)
  if (has_cardchange()) {
    clear_has_change();
    ::roosha::CardChange* temp = change_.cardchange_;
    change_.cardchange_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Change::set_allocated_cardchange(::roosha::CardChange* cardchange) {
  clear_change();
  if (cardchange) {
    set_has_cardchange();
    change_.cardchange_ = cardchange;
  }
  // @@protoc_insertion_point(field_set_allocated:roosha.Change.cardChange)
}

// .roosha.Scrutiny scrutiny = 2;
bool Change::has_scrutiny() const {
  return change_case() == kScrutiny;
}
void Change::set_has_scrutiny() {
  _oneof_case_[0] = kScrutiny;
}
void Change::clear_scrutiny() {
  if (has_scrutiny()) {
    delete change_.scrutiny_;
    clear_has_change();
  }
}
 const ::roosha::Scrutiny& Change::scrutiny() const {
  // @@protoc_insertion_point(field_get:roosha.Change.scrutiny)
  return has_scrutiny()
      ? *change_.scrutiny_
      : ::roosha::Scrutiny::default_instance();
}
::roosha::Scrutiny* Change::mutable_scrutiny() {
  if (!has_scrutiny()) {
    clear_change();
    set_has_scrutiny();
    change_.scrutiny_ = new ::roosha::Scrutiny;
  }
  // @@protoc_insertion_point(field_mutable:roosha.Change.scrutiny)
  return change_.scrutiny_;
}
::roosha::Scrutiny* Change::release_scrutiny() {
  // @@protoc_insertion_point(field_release:roosha.Change.scrutiny)
  if (has_scrutiny()) {
    clear_has_change();
    ::roosha::Scrutiny* temp = change_.scrutiny_;
    change_.scrutiny_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Change::set_allocated_scrutiny(::roosha::Scrutiny* scrutiny) {
  clear_change();
  if (scrutiny) {
    set_has_scrutiny();
    change_.scrutiny_ = scrutiny;
  }
  // @@protoc_insertion_point(field_set_allocated:roosha.Change.scrutiny)
}

bool Change::has_change() const {
  return change_case() != CHANGE_NOT_SET;
}
void Change::clear_has_change() {
  _oneof_case_[0] = CHANGE_NOT_SET;
}
Change::ChangeCase Change::change_case() const {
  return Change::ChangeCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CardChange_CreateCard::CardChange_CreateCard()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_changes_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:roosha.CardChange.CreateCard)
}
CardChange_CreateCard::CardChange_CreateCard(const CardChange_CreateCard& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:roosha.CardChange.CreateCard)
}

void CardChange_CreateCard::SharedCtor() {
  _cached_size_ = 0;
}

CardChange_CreateCard::~CardChange_CreateCard() {
  // @@protoc_insertion_point(destructor:roosha.CardChange.CreateCard)
  SharedDtor();
}

void CardChange_CreateCard::SharedDtor() {
}

void CardChange_CreateCard::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CardChange_CreateCard::descriptor() {
  protobuf_changes_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_changes_2eproto::file_level_metadata[1].descriptor;
}

const CardChange_CreateCard& CardChange_CreateCard::default_instance() {
  protobuf_changes_2eproto::InitDefaults();
  return *internal_default_instance();
}

CardChange_CreateCard* CardChange_CreateCard::New(::google::protobuf::Arena* arena) const {
  CardChange_CreateCard* n = new CardChange_CreateCard;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CardChange_CreateCard::Clear() {
// @@protoc_insertion_point(message_clear_start:roosha.CardChange.CreateCard)
}

bool CardChange_CreateCard::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:roosha.CardChange.CreateCard)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:roosha.CardChange.CreateCard)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:roosha.CardChange.CreateCard)
  return false;
#undef DO_
}

void CardChange_CreateCard::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:roosha.CardChange.CreateCard)
  // @@protoc_insertion_point(serialize_end:roosha.CardChange.CreateCard)
}

::google::protobuf::uint8* CardChange_CreateCard::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:roosha.CardChange.CreateCard)
  // @@protoc_insertion_point(serialize_to_array_end:roosha.CardChange.CreateCard)
  return target;
}

size_t CardChange_CreateCard::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:roosha.CardChange.CreateCard)
  size_t total_size = 0;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CardChange_CreateCard::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:roosha.CardChange.CreateCard)
  GOOGLE_DCHECK_NE(&from, this);
  const CardChange_CreateCard* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CardChange_CreateCard>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:roosha.CardChange.CreateCard)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:roosha.CardChange.CreateCard)
    MergeFrom(*source);
  }
}

void CardChange_CreateCard::MergeFrom(const CardChange_CreateCard& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:roosha.CardChange.CreateCard)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
}

void CardChange_CreateCard::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:roosha.CardChange.CreateCard)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CardChange_CreateCard::CopyFrom(const CardChange_CreateCard& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:roosha.CardChange.CreateCard)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CardChange_CreateCard::IsInitialized() const {
  return true;
}

void CardChange_CreateCard::Swap(CardChange_CreateCard* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CardChange_CreateCard::InternalSwap(CardChange_CreateCard* other) {
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CardChange_CreateCard::GetMetadata() const {
  protobuf_changes_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_changes_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CardChange_CreateCard

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CardChange_DeleteCard::CardChange_DeleteCard()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_changes_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:roosha.CardChange.DeleteCard)
}
CardChange_DeleteCard::CardChange_DeleteCard(const CardChange_DeleteCard& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:roosha.CardChange.DeleteCard)
}

void CardChange_DeleteCard::SharedCtor() {
  _cached_size_ = 0;
}

CardChange_DeleteCard::~CardChange_DeleteCard() {
  // @@protoc_insertion_point(destructor:roosha.CardChange.DeleteCard)
  SharedDtor();
}

void CardChange_DeleteCard::SharedDtor() {
}

void CardChange_DeleteCard::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CardChange_DeleteCard::descriptor() {
  protobuf_changes_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_changes_2eproto::file_level_metadata[2].descriptor;
}

const CardChange_DeleteCard& CardChange_DeleteCard::default_instance() {
  protobuf_changes_2eproto::InitDefaults();
  return *internal_default_instance();
}

CardChange_DeleteCard* CardChange_DeleteCard::New(::google::protobuf::Arena* arena) const {
  CardChange_DeleteCard* n = new CardChange_DeleteCard;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CardChange_DeleteCard::Clear() {
// @@protoc_insertion_point(message_clear_start:roosha.CardChange.DeleteCard)
}

bool CardChange_DeleteCard::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:roosha.CardChange.DeleteCard)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:roosha.CardChange.DeleteCard)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:roosha.CardChange.DeleteCard)
  return false;
#undef DO_
}

void CardChange_DeleteCard::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:roosha.CardChange.DeleteCard)
  // @@protoc_insertion_point(serialize_end:roosha.CardChange.DeleteCard)
}

::google::protobuf::uint8* CardChange_DeleteCard::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:roosha.CardChange.DeleteCard)
  // @@protoc_insertion_point(serialize_to_array_end:roosha.CardChange.DeleteCard)
  return target;
}

size_t CardChange_DeleteCard::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:roosha.CardChange.DeleteCard)
  size_t total_size = 0;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CardChange_DeleteCard::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:roosha.CardChange.DeleteCard)
  GOOGLE_DCHECK_NE(&from, this);
  const CardChange_DeleteCard* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CardChange_DeleteCard>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:roosha.CardChange.DeleteCard)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:roosha.CardChange.DeleteCard)
    MergeFrom(*source);
  }
}

void CardChange_DeleteCard::MergeFrom(const CardChange_DeleteCard& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:roosha.CardChange.DeleteCard)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
}

void CardChange_DeleteCard::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:roosha.CardChange.DeleteCard)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CardChange_DeleteCard::CopyFrom(const CardChange_DeleteCard& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:roosha.CardChange.DeleteCard)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CardChange_DeleteCard::IsInitialized() const {
  return true;
}

void CardChange_DeleteCard::Swap(CardChange_DeleteCard* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CardChange_DeleteCard::InternalSwap(CardChange_DeleteCard* other) {
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CardChange_DeleteCard::GetMetadata() const {
  protobuf_changes_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_changes_2eproto::file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CardChange_DeleteCard

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CardChange_ChangeSource::kNewSourceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CardChange_ChangeSource::CardChange_ChangeSource()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_changes_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:roosha.CardChange.ChangeSource)
}
CardChange_ChangeSource::CardChange_ChangeSource(const CardChange_ChangeSource& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  newsource_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.newsource().size() > 0) {
    newsource_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.newsource_);
  }
  // @@protoc_insertion_point(copy_constructor:roosha.CardChange.ChangeSource)
}

void CardChange_ChangeSource::SharedCtor() {
  newsource_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

CardChange_ChangeSource::~CardChange_ChangeSource() {
  // @@protoc_insertion_point(destructor:roosha.CardChange.ChangeSource)
  SharedDtor();
}

void CardChange_ChangeSource::SharedDtor() {
  newsource_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CardChange_ChangeSource::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CardChange_ChangeSource::descriptor() {
  protobuf_changes_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_changes_2eproto::file_level_metadata[3].descriptor;
}

const CardChange_ChangeSource& CardChange_ChangeSource::default_instance() {
  protobuf_changes_2eproto::InitDefaults();
  return *internal_default_instance();
}

CardChange_ChangeSource* CardChange_ChangeSource::New(::google::protobuf::Arena* arena) const {
  CardChange_ChangeSource* n = new CardChange_ChangeSource;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CardChange_ChangeSource::Clear() {
// @@protoc_insertion_point(message_clear_start:roosha.CardChange.ChangeSource)
  newsource_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool CardChange_ChangeSource::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:roosha.CardChange.ChangeSource)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string newSource = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_newsource()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->newsource().data(), this->newsource().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "roosha.CardChange.ChangeSource.newSource"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:roosha.CardChange.ChangeSource)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:roosha.CardChange.ChangeSource)
  return false;
#undef DO_
}

void CardChange_ChangeSource::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:roosha.CardChange.ChangeSource)
  // string newSource = 1;
  if (this->newsource().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->newsource().data(), this->newsource().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "roosha.CardChange.ChangeSource.newSource");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->newsource(), output);
  }

  // @@protoc_insertion_point(serialize_end:roosha.CardChange.ChangeSource)
}

::google::protobuf::uint8* CardChange_ChangeSource::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:roosha.CardChange.ChangeSource)
  // string newSource = 1;
  if (this->newsource().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->newsource().data(), this->newsource().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "roosha.CardChange.ChangeSource.newSource");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->newsource(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:roosha.CardChange.ChangeSource)
  return target;
}

size_t CardChange_ChangeSource::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:roosha.CardChange.ChangeSource)
  size_t total_size = 0;

  // string newSource = 1;
  if (this->newsource().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->newsource());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CardChange_ChangeSource::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:roosha.CardChange.ChangeSource)
  GOOGLE_DCHECK_NE(&from, this);
  const CardChange_ChangeSource* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CardChange_ChangeSource>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:roosha.CardChange.ChangeSource)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:roosha.CardChange.ChangeSource)
    MergeFrom(*source);
  }
}

void CardChange_ChangeSource::MergeFrom(const CardChange_ChangeSource& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:roosha.CardChange.ChangeSource)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.newsource().size() > 0) {

    newsource_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.newsource_);
  }
}

void CardChange_ChangeSource::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:roosha.CardChange.ChangeSource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CardChange_ChangeSource::CopyFrom(const CardChange_ChangeSource& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:roosha.CardChange.ChangeSource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CardChange_ChangeSource::IsInitialized() const {
  return true;
}

void CardChange_ChangeSource::Swap(CardChange_ChangeSource* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CardChange_ChangeSource::InternalSwap(CardChange_ChangeSource* other) {
  newsource_.Swap(&other->newsource_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CardChange_ChangeSource::GetMetadata() const {
  protobuf_changes_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_changes_2eproto::file_level_metadata[3];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CardChange_ChangeSource

// string newSource = 1;
void CardChange_ChangeSource::clear_newsource() {
  newsource_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CardChange_ChangeSource::newsource() const {
  // @@protoc_insertion_point(field_get:roosha.CardChange.ChangeSource.newSource)
  return newsource_.GetNoArena();
}
void CardChange_ChangeSource::set_newsource(const ::std::string& value) {
  
  newsource_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:roosha.CardChange.ChangeSource.newSource)
}
#if LANG_CXX11
void CardChange_ChangeSource::set_newsource(::std::string&& value) {
  
  newsource_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:roosha.CardChange.ChangeSource.newSource)
}
#endif
void CardChange_ChangeSource::set_newsource(const char* value) {
  
  newsource_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:roosha.CardChange.ChangeSource.newSource)
}
void CardChange_ChangeSource::set_newsource(const char* value, size_t size) {
  
  newsource_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:roosha.CardChange.ChangeSource.newSource)
}
::std::string* CardChange_ChangeSource::mutable_newsource() {
  
  // @@protoc_insertion_point(field_mutable:roosha.CardChange.ChangeSource.newSource)
  return newsource_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CardChange_ChangeSource::release_newsource() {
  // @@protoc_insertion_point(field_release:roosha.CardChange.ChangeSource.newSource)
  
  return newsource_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CardChange_ChangeSource::set_allocated_newsource(::std::string* newsource) {
  if (newsource != NULL) {
    
  } else {
    
  }
  newsource_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), newsource);
  // @@protoc_insertion_point(field_set_allocated:roosha.CardChange.ChangeSource.newSource)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CardChange_InsertElem::kFieldFieldNumber;
const int CardChange_InsertElem::kIndexFieldNumber;
const int CardChange_InsertElem::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CardChange_InsertElem::CardChange_InsertElem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_changes_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:roosha.CardChange.InsertElem)
}
CardChange_InsertElem::CardChange_InsertElem(const CardChange_InsertElem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  index_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.index().size() > 0) {
    index_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.index_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  field_ = from.field_;
  // @@protoc_insertion_point(copy_constructor:roosha.CardChange.InsertElem)
}

void CardChange_InsertElem::SharedCtor() {
  index_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field_ = 0;
  _cached_size_ = 0;
}

CardChange_InsertElem::~CardChange_InsertElem() {
  // @@protoc_insertion_point(destructor:roosha.CardChange.InsertElem)
  SharedDtor();
}

void CardChange_InsertElem::SharedDtor() {
  index_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CardChange_InsertElem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CardChange_InsertElem::descriptor() {
  protobuf_changes_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_changes_2eproto::file_level_metadata[4].descriptor;
}

const CardChange_InsertElem& CardChange_InsertElem::default_instance() {
  protobuf_changes_2eproto::InitDefaults();
  return *internal_default_instance();
}

CardChange_InsertElem* CardChange_InsertElem::New(::google::protobuf::Arena* arena) const {
  CardChange_InsertElem* n = new CardChange_InsertElem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CardChange_InsertElem::Clear() {
// @@protoc_insertion_point(message_clear_start:roosha.CardChange.InsertElem)
  index_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field_ = 0;
}

bool CardChange_InsertElem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:roosha.CardChange.InsertElem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .roosha.CardChange.Field field = 1;
      case 1: {
        if (tag == 8u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_field(static_cast< ::roosha::CardChange_Field >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes index = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_index()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string value = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), this->value().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "roosha.CardChange.InsertElem.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:roosha.CardChange.InsertElem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:roosha.CardChange.InsertElem)
  return false;
#undef DO_
}

void CardChange_InsertElem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:roosha.CardChange.InsertElem)
  // .roosha.CardChange.Field field = 1;
  if (this->field() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->field(), output);
  }

  // bytes index = 2;
  if (this->index().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->index(), output);
  }

  // string value = 3;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "roosha.CardChange.InsertElem.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->value(), output);
  }

  // @@protoc_insertion_point(serialize_end:roosha.CardChange.InsertElem)
}

::google::protobuf::uint8* CardChange_InsertElem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:roosha.CardChange.InsertElem)
  // .roosha.CardChange.Field field = 1;
  if (this->field() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->field(), target);
  }

  // bytes index = 2;
  if (this->index().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->index(), target);
  }

  // string value = 3;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "roosha.CardChange.InsertElem.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->value(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:roosha.CardChange.InsertElem)
  return target;
}

size_t CardChange_InsertElem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:roosha.CardChange.InsertElem)
  size_t total_size = 0;

  // bytes index = 2;
  if (this->index().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->index());
  }

  // string value = 3;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  // .roosha.CardChange.Field field = 1;
  if (this->field() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->field());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CardChange_InsertElem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:roosha.CardChange.InsertElem)
  GOOGLE_DCHECK_NE(&from, this);
  const CardChange_InsertElem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CardChange_InsertElem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:roosha.CardChange.InsertElem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:roosha.CardChange.InsertElem)
    MergeFrom(*source);
  }
}

void CardChange_InsertElem::MergeFrom(const CardChange_InsertElem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:roosha.CardChange.InsertElem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.index().size() > 0) {

    index_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.index_);
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.field() != 0) {
    set_field(from.field());
  }
}

void CardChange_InsertElem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:roosha.CardChange.InsertElem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CardChange_InsertElem::CopyFrom(const CardChange_InsertElem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:roosha.CardChange.InsertElem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CardChange_InsertElem::IsInitialized() const {
  return true;
}

void CardChange_InsertElem::Swap(CardChange_InsertElem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CardChange_InsertElem::InternalSwap(CardChange_InsertElem* other) {
  index_.Swap(&other->index_);
  value_.Swap(&other->value_);
  std::swap(field_, other->field_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CardChange_InsertElem::GetMetadata() const {
  protobuf_changes_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_changes_2eproto::file_level_metadata[4];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CardChange_InsertElem

// .roosha.CardChange.Field field = 1;
void CardChange_InsertElem::clear_field() {
  field_ = 0;
}
::roosha::CardChange_Field CardChange_InsertElem::field() const {
  // @@protoc_insertion_point(field_get:roosha.CardChange.InsertElem.field)
  return static_cast< ::roosha::CardChange_Field >(field_);
}
void CardChange_InsertElem::set_field(::roosha::CardChange_Field value) {
  
  field_ = value;
  // @@protoc_insertion_point(field_set:roosha.CardChange.InsertElem.field)
}

// bytes index = 2;
void CardChange_InsertElem::clear_index() {
  index_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CardChange_InsertElem::index() const {
  // @@protoc_insertion_point(field_get:roosha.CardChange.InsertElem.index)
  return index_.GetNoArena();
}
void CardChange_InsertElem::set_index(const ::std::string& value) {
  
  index_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:roosha.CardChange.InsertElem.index)
}
#if LANG_CXX11
void CardChange_InsertElem::set_index(::std::string&& value) {
  
  index_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:roosha.CardChange.InsertElem.index)
}
#endif
void CardChange_InsertElem::set_index(const char* value) {
  
  index_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:roosha.CardChange.InsertElem.index)
}
void CardChange_InsertElem::set_index(const void* value, size_t size) {
  
  index_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:roosha.CardChange.InsertElem.index)
}
::std::string* CardChange_InsertElem::mutable_index() {
  
  // @@protoc_insertion_point(field_mutable:roosha.CardChange.InsertElem.index)
  return index_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CardChange_InsertElem::release_index() {
  // @@protoc_insertion_point(field_release:roosha.CardChange.InsertElem.index)
  
  return index_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CardChange_InsertElem::set_allocated_index(::std::string* index) {
  if (index != NULL) {
    
  } else {
    
  }
  index_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), index);
  // @@protoc_insertion_point(field_set_allocated:roosha.CardChange.InsertElem.index)
}

// string value = 3;
void CardChange_InsertElem::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CardChange_InsertElem::value() const {
  // @@protoc_insertion_point(field_get:roosha.CardChange.InsertElem.value)
  return value_.GetNoArena();
}
void CardChange_InsertElem::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:roosha.CardChange.InsertElem.value)
}
#if LANG_CXX11
void CardChange_InsertElem::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:roosha.CardChange.InsertElem.value)
}
#endif
void CardChange_InsertElem::set_value(const char* value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:roosha.CardChange.InsertElem.value)
}
void CardChange_InsertElem::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:roosha.CardChange.InsertElem.value)
}
::std::string* CardChange_InsertElem::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:roosha.CardChange.InsertElem.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CardChange_InsertElem::release_value() {
  // @@protoc_insertion_point(field_release:roosha.CardChange.InsertElem.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CardChange_InsertElem::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:roosha.CardChange.InsertElem.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CardChange_DeleteElem::kFieldFieldNumber;
const int CardChange_DeleteElem::kIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CardChange_DeleteElem::CardChange_DeleteElem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_changes_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:roosha.CardChange.DeleteElem)
}
CardChange_DeleteElem::CardChange_DeleteElem(const CardChange_DeleteElem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  index_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.index().size() > 0) {
    index_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.index_);
  }
  field_ = from.field_;
  // @@protoc_insertion_point(copy_constructor:roosha.CardChange.DeleteElem)
}

void CardChange_DeleteElem::SharedCtor() {
  index_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field_ = 0;
  _cached_size_ = 0;
}

CardChange_DeleteElem::~CardChange_DeleteElem() {
  // @@protoc_insertion_point(destructor:roosha.CardChange.DeleteElem)
  SharedDtor();
}

void CardChange_DeleteElem::SharedDtor() {
  index_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CardChange_DeleteElem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CardChange_DeleteElem::descriptor() {
  protobuf_changes_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_changes_2eproto::file_level_metadata[5].descriptor;
}

const CardChange_DeleteElem& CardChange_DeleteElem::default_instance() {
  protobuf_changes_2eproto::InitDefaults();
  return *internal_default_instance();
}

CardChange_DeleteElem* CardChange_DeleteElem::New(::google::protobuf::Arena* arena) const {
  CardChange_DeleteElem* n = new CardChange_DeleteElem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CardChange_DeleteElem::Clear() {
// @@protoc_insertion_point(message_clear_start:roosha.CardChange.DeleteElem)
  index_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field_ = 0;
}

bool CardChange_DeleteElem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:roosha.CardChange.DeleteElem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .roosha.CardChange.Field field = 1;
      case 1: {
        if (tag == 8u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_field(static_cast< ::roosha::CardChange_Field >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes index = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_index()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:roosha.CardChange.DeleteElem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:roosha.CardChange.DeleteElem)
  return false;
#undef DO_
}

void CardChange_DeleteElem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:roosha.CardChange.DeleteElem)
  // .roosha.CardChange.Field field = 1;
  if (this->field() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->field(), output);
  }

  // bytes index = 2;
  if (this->index().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->index(), output);
  }

  // @@protoc_insertion_point(serialize_end:roosha.CardChange.DeleteElem)
}

::google::protobuf::uint8* CardChange_DeleteElem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:roosha.CardChange.DeleteElem)
  // .roosha.CardChange.Field field = 1;
  if (this->field() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->field(), target);
  }

  // bytes index = 2;
  if (this->index().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->index(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:roosha.CardChange.DeleteElem)
  return target;
}

size_t CardChange_DeleteElem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:roosha.CardChange.DeleteElem)
  size_t total_size = 0;

  // bytes index = 2;
  if (this->index().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->index());
  }

  // .roosha.CardChange.Field field = 1;
  if (this->field() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->field());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CardChange_DeleteElem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:roosha.CardChange.DeleteElem)
  GOOGLE_DCHECK_NE(&from, this);
  const CardChange_DeleteElem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CardChange_DeleteElem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:roosha.CardChange.DeleteElem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:roosha.CardChange.DeleteElem)
    MergeFrom(*source);
  }
}

void CardChange_DeleteElem::MergeFrom(const CardChange_DeleteElem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:roosha.CardChange.DeleteElem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.index().size() > 0) {

    index_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.index_);
  }
  if (from.field() != 0) {
    set_field(from.field());
  }
}

void CardChange_DeleteElem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:roosha.CardChange.DeleteElem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CardChange_DeleteElem::CopyFrom(const CardChange_DeleteElem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:roosha.CardChange.DeleteElem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CardChange_DeleteElem::IsInitialized() const {
  return true;
}

void CardChange_DeleteElem::Swap(CardChange_DeleteElem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CardChange_DeleteElem::InternalSwap(CardChange_DeleteElem* other) {
  index_.Swap(&other->index_);
  std::swap(field_, other->field_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CardChange_DeleteElem::GetMetadata() const {
  protobuf_changes_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_changes_2eproto::file_level_metadata[5];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CardChange_DeleteElem

// .roosha.CardChange.Field field = 1;
void CardChange_DeleteElem::clear_field() {
  field_ = 0;
}
::roosha::CardChange_Field CardChange_DeleteElem::field() const {
  // @@protoc_insertion_point(field_get:roosha.CardChange.DeleteElem.field)
  return static_cast< ::roosha::CardChange_Field >(field_);
}
void CardChange_DeleteElem::set_field(::roosha::CardChange_Field value) {
  
  field_ = value;
  // @@protoc_insertion_point(field_set:roosha.CardChange.DeleteElem.field)
}

// bytes index = 2;
void CardChange_DeleteElem::clear_index() {
  index_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CardChange_DeleteElem::index() const {
  // @@protoc_insertion_point(field_get:roosha.CardChange.DeleteElem.index)
  return index_.GetNoArena();
}
void CardChange_DeleteElem::set_index(const ::std::string& value) {
  
  index_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:roosha.CardChange.DeleteElem.index)
}
#if LANG_CXX11
void CardChange_DeleteElem::set_index(::std::string&& value) {
  
  index_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:roosha.CardChange.DeleteElem.index)
}
#endif
void CardChange_DeleteElem::set_index(const char* value) {
  
  index_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:roosha.CardChange.DeleteElem.index)
}
void CardChange_DeleteElem::set_index(const void* value, size_t size) {
  
  index_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:roosha.CardChange.DeleteElem.index)
}
::std::string* CardChange_DeleteElem::mutable_index() {
  
  // @@protoc_insertion_point(field_mutable:roosha.CardChange.DeleteElem.index)
  return index_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CardChange_DeleteElem::release_index() {
  // @@protoc_insertion_point(field_release:roosha.CardChange.DeleteElem.index)
  
  return index_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CardChange_DeleteElem::set_allocated_index(::std::string* index) {
  if (index != NULL) {
    
  } else {
    
  }
  index_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), index);
  // @@protoc_insertion_point(field_set_allocated:roosha.CardChange.DeleteElem.index)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CardChange_EditElem::kFieldFieldNumber;
const int CardChange_EditElem::kPositionFieldNumber;
const int CardChange_EditElem::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CardChange_EditElem::CardChange_EditElem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_changes_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:roosha.CardChange.EditElem)
}
CardChange_EditElem::CardChange_EditElem(const CardChange_EditElem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  position_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.position().size() > 0) {
    position_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.position_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  field_ = from.field_;
  // @@protoc_insertion_point(copy_constructor:roosha.CardChange.EditElem)
}

void CardChange_EditElem::SharedCtor() {
  position_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field_ = 0;
  _cached_size_ = 0;
}

CardChange_EditElem::~CardChange_EditElem() {
  // @@protoc_insertion_point(destructor:roosha.CardChange.EditElem)
  SharedDtor();
}

void CardChange_EditElem::SharedDtor() {
  position_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CardChange_EditElem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CardChange_EditElem::descriptor() {
  protobuf_changes_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_changes_2eproto::file_level_metadata[6].descriptor;
}

const CardChange_EditElem& CardChange_EditElem::default_instance() {
  protobuf_changes_2eproto::InitDefaults();
  return *internal_default_instance();
}

CardChange_EditElem* CardChange_EditElem::New(::google::protobuf::Arena* arena) const {
  CardChange_EditElem* n = new CardChange_EditElem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CardChange_EditElem::Clear() {
// @@protoc_insertion_point(message_clear_start:roosha.CardChange.EditElem)
  position_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field_ = 0;
}

bool CardChange_EditElem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:roosha.CardChange.EditElem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .roosha.CardChange.Field field = 1;
      case 1: {
        if (tag == 8u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_field(static_cast< ::roosha::CardChange_Field >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes position = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_position()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string value = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), this->value().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "roosha.CardChange.EditElem.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:roosha.CardChange.EditElem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:roosha.CardChange.EditElem)
  return false;
#undef DO_
}

void CardChange_EditElem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:roosha.CardChange.EditElem)
  // .roosha.CardChange.Field field = 1;
  if (this->field() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->field(), output);
  }

  // bytes position = 2;
  if (this->position().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->position(), output);
  }

  // string value = 3;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "roosha.CardChange.EditElem.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->value(), output);
  }

  // @@protoc_insertion_point(serialize_end:roosha.CardChange.EditElem)
}

::google::protobuf::uint8* CardChange_EditElem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:roosha.CardChange.EditElem)
  // .roosha.CardChange.Field field = 1;
  if (this->field() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->field(), target);
  }

  // bytes position = 2;
  if (this->position().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->position(), target);
  }

  // string value = 3;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "roosha.CardChange.EditElem.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->value(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:roosha.CardChange.EditElem)
  return target;
}

size_t CardChange_EditElem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:roosha.CardChange.EditElem)
  size_t total_size = 0;

  // bytes position = 2;
  if (this->position().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->position());
  }

  // string value = 3;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  // .roosha.CardChange.Field field = 1;
  if (this->field() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->field());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CardChange_EditElem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:roosha.CardChange.EditElem)
  GOOGLE_DCHECK_NE(&from, this);
  const CardChange_EditElem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CardChange_EditElem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:roosha.CardChange.EditElem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:roosha.CardChange.EditElem)
    MergeFrom(*source);
  }
}

void CardChange_EditElem::MergeFrom(const CardChange_EditElem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:roosha.CardChange.EditElem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.position().size() > 0) {

    position_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.position_);
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.field() != 0) {
    set_field(from.field());
  }
}

void CardChange_EditElem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:roosha.CardChange.EditElem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CardChange_EditElem::CopyFrom(const CardChange_EditElem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:roosha.CardChange.EditElem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CardChange_EditElem::IsInitialized() const {
  return true;
}

void CardChange_EditElem::Swap(CardChange_EditElem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CardChange_EditElem::InternalSwap(CardChange_EditElem* other) {
  position_.Swap(&other->position_);
  value_.Swap(&other->value_);
  std::swap(field_, other->field_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CardChange_EditElem::GetMetadata() const {
  protobuf_changes_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_changes_2eproto::file_level_metadata[6];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CardChange_EditElem

// .roosha.CardChange.Field field = 1;
void CardChange_EditElem::clear_field() {
  field_ = 0;
}
::roosha::CardChange_Field CardChange_EditElem::field() const {
  // @@protoc_insertion_point(field_get:roosha.CardChange.EditElem.field)
  return static_cast< ::roosha::CardChange_Field >(field_);
}
void CardChange_EditElem::set_field(::roosha::CardChange_Field value) {
  
  field_ = value;
  // @@protoc_insertion_point(field_set:roosha.CardChange.EditElem.field)
}

// bytes position = 2;
void CardChange_EditElem::clear_position() {
  position_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CardChange_EditElem::position() const {
  // @@protoc_insertion_point(field_get:roosha.CardChange.EditElem.position)
  return position_.GetNoArena();
}
void CardChange_EditElem::set_position(const ::std::string& value) {
  
  position_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:roosha.CardChange.EditElem.position)
}
#if LANG_CXX11
void CardChange_EditElem::set_position(::std::string&& value) {
  
  position_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:roosha.CardChange.EditElem.position)
}
#endif
void CardChange_EditElem::set_position(const char* value) {
  
  position_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:roosha.CardChange.EditElem.position)
}
void CardChange_EditElem::set_position(const void* value, size_t size) {
  
  position_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:roosha.CardChange.EditElem.position)
}
::std::string* CardChange_EditElem::mutable_position() {
  
  // @@protoc_insertion_point(field_mutable:roosha.CardChange.EditElem.position)
  return position_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CardChange_EditElem::release_position() {
  // @@protoc_insertion_point(field_release:roosha.CardChange.EditElem.position)
  
  return position_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CardChange_EditElem::set_allocated_position(::std::string* position) {
  if (position != NULL) {
    
  } else {
    
  }
  position_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), position);
  // @@protoc_insertion_point(field_set_allocated:roosha.CardChange.EditElem.position)
}

// string value = 3;
void CardChange_EditElem::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CardChange_EditElem::value() const {
  // @@protoc_insertion_point(field_get:roosha.CardChange.EditElem.value)
  return value_.GetNoArena();
}
void CardChange_EditElem::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:roosha.CardChange.EditElem.value)
}
#if LANG_CXX11
void CardChange_EditElem::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:roosha.CardChange.EditElem.value)
}
#endif
void CardChange_EditElem::set_value(const char* value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:roosha.CardChange.EditElem.value)
}
void CardChange_EditElem::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:roosha.CardChange.EditElem.value)
}
::std::string* CardChange_EditElem::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:roosha.CardChange.EditElem.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CardChange_EditElem::release_value() {
  // @@protoc_insertion_point(field_release:roosha.CardChange.EditElem.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CardChange_EditElem::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:roosha.CardChange.EditElem.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CardChange::kCardIdFieldNumber;
const int CardChange::kCreateCardFieldNumber;
const int CardChange::kDeleteCardFieldNumber;
const int CardChange::kChangeSourceFieldNumber;
const int CardChange::kInsertElemFieldNumber;
const int CardChange::kDeleteElemFieldNumber;
const int CardChange::kEditElemFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CardChange::CardChange()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_changes_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:roosha.CardChange)
}
CardChange::CardChange(const CardChange& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cardid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cardid().size() > 0) {
    cardid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cardid_);
  }
  clear_has_change();
  switch (from.change_case()) {
    case kCreateCard: {
      mutable_createcard()->::roosha::CardChange_CreateCard::MergeFrom(from.createcard());
      break;
    }
    case kDeleteCard: {
      mutable_deletecard()->::roosha::CardChange_DeleteCard::MergeFrom(from.deletecard());
      break;
    }
    case kChangeSource: {
      mutable_changesource()->::roosha::CardChange_ChangeSource::MergeFrom(from.changesource());
      break;
    }
    case kInsertElem: {
      mutable_insertelem()->::roosha::CardChange_InsertElem::MergeFrom(from.insertelem());
      break;
    }
    case kDeleteElem: {
      mutable_deleteelem()->::roosha::CardChange_DeleteElem::MergeFrom(from.deleteelem());
      break;
    }
    case kEditElem: {
      mutable_editelem()->::roosha::CardChange_EditElem::MergeFrom(from.editelem());
      break;
    }
    case CHANGE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:roosha.CardChange)
}

void CardChange::SharedCtor() {
  cardid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_change();
  _cached_size_ = 0;
}

CardChange::~CardChange() {
  // @@protoc_insertion_point(destructor:roosha.CardChange)
  SharedDtor();
}

void CardChange::SharedDtor() {
  cardid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_change()) {
    clear_change();
  }
}

void CardChange::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CardChange::descriptor() {
  protobuf_changes_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_changes_2eproto::file_level_metadata[7].descriptor;
}

const CardChange& CardChange::default_instance() {
  protobuf_changes_2eproto::InitDefaults();
  return *internal_default_instance();
}

CardChange* CardChange::New(::google::protobuf::Arena* arena) const {
  CardChange* n = new CardChange;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CardChange::clear_change() {
// @@protoc_insertion_point(one_of_clear_start:roosha.CardChange)
  switch (change_case()) {
    case kCreateCard: {
      delete change_.createcard_;
      break;
    }
    case kDeleteCard: {
      delete change_.deletecard_;
      break;
    }
    case kChangeSource: {
      delete change_.changesource_;
      break;
    }
    case kInsertElem: {
      delete change_.insertelem_;
      break;
    }
    case kDeleteElem: {
      delete change_.deleteelem_;
      break;
    }
    case kEditElem: {
      delete change_.editelem_;
      break;
    }
    case CHANGE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = CHANGE_NOT_SET;
}


void CardChange::Clear() {
// @@protoc_insertion_point(message_clear_start:roosha.CardChange)
  cardid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_change();
}

bool CardChange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:roosha.CardChange)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string cardId = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cardid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cardid().data(), this->cardid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "roosha.CardChange.cardId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .roosha.CardChange.CreateCard createCard = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_createcard()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .roosha.CardChange.DeleteCard deleteCard = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_deletecard()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .roosha.CardChange.ChangeSource changeSource = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_changesource()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .roosha.CardChange.InsertElem insertElem = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_insertelem()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .roosha.CardChange.DeleteElem deleteElem = 6;
      case 6: {
        if (tag == 50u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_deleteelem()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .roosha.CardChange.EditElem editElem = 7;
      case 7: {
        if (tag == 58u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_editelem()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:roosha.CardChange)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:roosha.CardChange)
  return false;
#undef DO_
}

void CardChange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:roosha.CardChange)
  // string cardId = 1;
  if (this->cardid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cardid().data(), this->cardid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "roosha.CardChange.cardId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->cardid(), output);
  }

  // .roosha.CardChange.CreateCard createCard = 2;
  if (has_createcard()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *change_.createcard_, output);
  }

  // .roosha.CardChange.DeleteCard deleteCard = 3;
  if (has_deletecard()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *change_.deletecard_, output);
  }

  // .roosha.CardChange.ChangeSource changeSource = 4;
  if (has_changesource()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *change_.changesource_, output);
  }

  // .roosha.CardChange.InsertElem insertElem = 5;
  if (has_insertelem()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *change_.insertelem_, output);
  }

  // .roosha.CardChange.DeleteElem deleteElem = 6;
  if (has_deleteelem()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *change_.deleteelem_, output);
  }

  // .roosha.CardChange.EditElem editElem = 7;
  if (has_editelem()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *change_.editelem_, output);
  }

  // @@protoc_insertion_point(serialize_end:roosha.CardChange)
}

::google::protobuf::uint8* CardChange::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:roosha.CardChange)
  // string cardId = 1;
  if (this->cardid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cardid().data(), this->cardid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "roosha.CardChange.cardId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->cardid(), target);
  }

  // .roosha.CardChange.CreateCard createCard = 2;
  if (has_createcard()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *change_.createcard_, false, target);
  }

  // .roosha.CardChange.DeleteCard deleteCard = 3;
  if (has_deletecard()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *change_.deletecard_, false, target);
  }

  // .roosha.CardChange.ChangeSource changeSource = 4;
  if (has_changesource()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *change_.changesource_, false, target);
  }

  // .roosha.CardChange.InsertElem insertElem = 5;
  if (has_insertelem()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *change_.insertelem_, false, target);
  }

  // .roosha.CardChange.DeleteElem deleteElem = 6;
  if (has_deleteelem()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *change_.deleteelem_, false, target);
  }

  // .roosha.CardChange.EditElem editElem = 7;
  if (has_editelem()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *change_.editelem_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:roosha.CardChange)
  return target;
}

size_t CardChange::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:roosha.CardChange)
  size_t total_size = 0;

  // string cardId = 1;
  if (this->cardid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cardid());
  }

  switch (change_case()) {
    // .roosha.CardChange.CreateCard createCard = 2;
    case kCreateCard: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *change_.createcard_);
      break;
    }
    // .roosha.CardChange.DeleteCard deleteCard = 3;
    case kDeleteCard: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *change_.deletecard_);
      break;
    }
    // .roosha.CardChange.ChangeSource changeSource = 4;
    case kChangeSource: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *change_.changesource_);
      break;
    }
    // .roosha.CardChange.InsertElem insertElem = 5;
    case kInsertElem: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *change_.insertelem_);
      break;
    }
    // .roosha.CardChange.DeleteElem deleteElem = 6;
    case kDeleteElem: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *change_.deleteelem_);
      break;
    }
    // .roosha.CardChange.EditElem editElem = 7;
    case kEditElem: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *change_.editelem_);
      break;
    }
    case CHANGE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CardChange::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:roosha.CardChange)
  GOOGLE_DCHECK_NE(&from, this);
  const CardChange* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CardChange>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:roosha.CardChange)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:roosha.CardChange)
    MergeFrom(*source);
  }
}

void CardChange::MergeFrom(const CardChange& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:roosha.CardChange)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.cardid().size() > 0) {

    cardid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cardid_);
  }
  switch (from.change_case()) {
    case kCreateCard: {
      mutable_createcard()->::roosha::CardChange_CreateCard::MergeFrom(from.createcard());
      break;
    }
    case kDeleteCard: {
      mutable_deletecard()->::roosha::CardChange_DeleteCard::MergeFrom(from.deletecard());
      break;
    }
    case kChangeSource: {
      mutable_changesource()->::roosha::CardChange_ChangeSource::MergeFrom(from.changesource());
      break;
    }
    case kInsertElem: {
      mutable_insertelem()->::roosha::CardChange_InsertElem::MergeFrom(from.insertelem());
      break;
    }
    case kDeleteElem: {
      mutable_deleteelem()->::roosha::CardChange_DeleteElem::MergeFrom(from.deleteelem());
      break;
    }
    case kEditElem: {
      mutable_editelem()->::roosha::CardChange_EditElem::MergeFrom(from.editelem());
      break;
    }
    case CHANGE_NOT_SET: {
      break;
    }
  }
}

void CardChange::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:roosha.CardChange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CardChange::CopyFrom(const CardChange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:roosha.CardChange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CardChange::IsInitialized() const {
  return true;
}

void CardChange::Swap(CardChange* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CardChange::InternalSwap(CardChange* other) {
  cardid_.Swap(&other->cardid_);
  std::swap(change_, other->change_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CardChange::GetMetadata() const {
  protobuf_changes_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_changes_2eproto::file_level_metadata[7];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CardChange

// string cardId = 1;
void CardChange::clear_cardid() {
  cardid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CardChange::cardid() const {
  // @@protoc_insertion_point(field_get:roosha.CardChange.cardId)
  return cardid_.GetNoArena();
}
void CardChange::set_cardid(const ::std::string& value) {
  
  cardid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:roosha.CardChange.cardId)
}
#if LANG_CXX11
void CardChange::set_cardid(::std::string&& value) {
  
  cardid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:roosha.CardChange.cardId)
}
#endif
void CardChange::set_cardid(const char* value) {
  
  cardid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:roosha.CardChange.cardId)
}
void CardChange::set_cardid(const char* value, size_t size) {
  
  cardid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:roosha.CardChange.cardId)
}
::std::string* CardChange::mutable_cardid() {
  
  // @@protoc_insertion_point(field_mutable:roosha.CardChange.cardId)
  return cardid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CardChange::release_cardid() {
  // @@protoc_insertion_point(field_release:roosha.CardChange.cardId)
  
  return cardid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CardChange::set_allocated_cardid(::std::string* cardid) {
  if (cardid != NULL) {
    
  } else {
    
  }
  cardid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cardid);
  // @@protoc_insertion_point(field_set_allocated:roosha.CardChange.cardId)
}

// .roosha.CardChange.CreateCard createCard = 2;
bool CardChange::has_createcard() const {
  return change_case() == kCreateCard;
}
void CardChange::set_has_createcard() {
  _oneof_case_[0] = kCreateCard;
}
void CardChange::clear_createcard() {
  if (has_createcard()) {
    delete change_.createcard_;
    clear_has_change();
  }
}
 const ::roosha::CardChange_CreateCard& CardChange::createcard() const {
  // @@protoc_insertion_point(field_get:roosha.CardChange.createCard)
  return has_createcard()
      ? *change_.createcard_
      : ::roosha::CardChange_CreateCard::default_instance();
}
::roosha::CardChange_CreateCard* CardChange::mutable_createcard() {
  if (!has_createcard()) {
    clear_change();
    set_has_createcard();
    change_.createcard_ = new ::roosha::CardChange_CreateCard;
  }
  // @@protoc_insertion_point(field_mutable:roosha.CardChange.createCard)
  return change_.createcard_;
}
::roosha::CardChange_CreateCard* CardChange::release_createcard() {
  // @@protoc_insertion_point(field_release:roosha.CardChange.createCard)
  if (has_createcard()) {
    clear_has_change();
    ::roosha::CardChange_CreateCard* temp = change_.createcard_;
    change_.createcard_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void CardChange::set_allocated_createcard(::roosha::CardChange_CreateCard* createcard) {
  clear_change();
  if (createcard) {
    set_has_createcard();
    change_.createcard_ = createcard;
  }
  // @@protoc_insertion_point(field_set_allocated:roosha.CardChange.createCard)
}

// .roosha.CardChange.DeleteCard deleteCard = 3;
bool CardChange::has_deletecard() const {
  return change_case() == kDeleteCard;
}
void CardChange::set_has_deletecard() {
  _oneof_case_[0] = kDeleteCard;
}
void CardChange::clear_deletecard() {
  if (has_deletecard()) {
    delete change_.deletecard_;
    clear_has_change();
  }
}
 const ::roosha::CardChange_DeleteCard& CardChange::deletecard() const {
  // @@protoc_insertion_point(field_get:roosha.CardChange.deleteCard)
  return has_deletecard()
      ? *change_.deletecard_
      : ::roosha::CardChange_DeleteCard::default_instance();
}
::roosha::CardChange_DeleteCard* CardChange::mutable_deletecard() {
  if (!has_deletecard()) {
    clear_change();
    set_has_deletecard();
    change_.deletecard_ = new ::roosha::CardChange_DeleteCard;
  }
  // @@protoc_insertion_point(field_mutable:roosha.CardChange.deleteCard)
  return change_.deletecard_;
}
::roosha::CardChange_DeleteCard* CardChange::release_deletecard() {
  // @@protoc_insertion_point(field_release:roosha.CardChange.deleteCard)
  if (has_deletecard()) {
    clear_has_change();
    ::roosha::CardChange_DeleteCard* temp = change_.deletecard_;
    change_.deletecard_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void CardChange::set_allocated_deletecard(::roosha::CardChange_DeleteCard* deletecard) {
  clear_change();
  if (deletecard) {
    set_has_deletecard();
    change_.deletecard_ = deletecard;
  }
  // @@protoc_insertion_point(field_set_allocated:roosha.CardChange.deleteCard)
}

// .roosha.CardChange.ChangeSource changeSource = 4;
bool CardChange::has_changesource() const {
  return change_case() == kChangeSource;
}
void CardChange::set_has_changesource() {
  _oneof_case_[0] = kChangeSource;
}
void CardChange::clear_changesource() {
  if (has_changesource()) {
    delete change_.changesource_;
    clear_has_change();
  }
}
 const ::roosha::CardChange_ChangeSource& CardChange::changesource() const {
  // @@protoc_insertion_point(field_get:roosha.CardChange.changeSource)
  return has_changesource()
      ? *change_.changesource_
      : ::roosha::CardChange_ChangeSource::default_instance();
}
::roosha::CardChange_ChangeSource* CardChange::mutable_changesource() {
  if (!has_changesource()) {
    clear_change();
    set_has_changesource();
    change_.changesource_ = new ::roosha::CardChange_ChangeSource;
  }
  // @@protoc_insertion_point(field_mutable:roosha.CardChange.changeSource)
  return change_.changesource_;
}
::roosha::CardChange_ChangeSource* CardChange::release_changesource() {
  // @@protoc_insertion_point(field_release:roosha.CardChange.changeSource)
  if (has_changesource()) {
    clear_has_change();
    ::roosha::CardChange_ChangeSource* temp = change_.changesource_;
    change_.changesource_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void CardChange::set_allocated_changesource(::roosha::CardChange_ChangeSource* changesource) {
  clear_change();
  if (changesource) {
    set_has_changesource();
    change_.changesource_ = changesource;
  }
  // @@protoc_insertion_point(field_set_allocated:roosha.CardChange.changeSource)
}

// .roosha.CardChange.InsertElem insertElem = 5;
bool CardChange::has_insertelem() const {
  return change_case() == kInsertElem;
}
void CardChange::set_has_insertelem() {
  _oneof_case_[0] = kInsertElem;
}
void CardChange::clear_insertelem() {
  if (has_insertelem()) {
    delete change_.insertelem_;
    clear_has_change();
  }
}
 const ::roosha::CardChange_InsertElem& CardChange::insertelem() const {
  // @@protoc_insertion_point(field_get:roosha.CardChange.insertElem)
  return has_insertelem()
      ? *change_.insertelem_
      : ::roosha::CardChange_InsertElem::default_instance();
}
::roosha::CardChange_InsertElem* CardChange::mutable_insertelem() {
  if (!has_insertelem()) {
    clear_change();
    set_has_insertelem();
    change_.insertelem_ = new ::roosha::CardChange_InsertElem;
  }
  // @@protoc_insertion_point(field_mutable:roosha.CardChange.insertElem)
  return change_.insertelem_;
}
::roosha::CardChange_InsertElem* CardChange::release_insertelem() {
  // @@protoc_insertion_point(field_release:roosha.CardChange.insertElem)
  if (has_insertelem()) {
    clear_has_change();
    ::roosha::CardChange_InsertElem* temp = change_.insertelem_;
    change_.insertelem_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void CardChange::set_allocated_insertelem(::roosha::CardChange_InsertElem* insertelem) {
  clear_change();
  if (insertelem) {
    set_has_insertelem();
    change_.insertelem_ = insertelem;
  }
  // @@protoc_insertion_point(field_set_allocated:roosha.CardChange.insertElem)
}

// .roosha.CardChange.DeleteElem deleteElem = 6;
bool CardChange::has_deleteelem() const {
  return change_case() == kDeleteElem;
}
void CardChange::set_has_deleteelem() {
  _oneof_case_[0] = kDeleteElem;
}
void CardChange::clear_deleteelem() {
  if (has_deleteelem()) {
    delete change_.deleteelem_;
    clear_has_change();
  }
}
 const ::roosha::CardChange_DeleteElem& CardChange::deleteelem() const {
  // @@protoc_insertion_point(field_get:roosha.CardChange.deleteElem)
  return has_deleteelem()
      ? *change_.deleteelem_
      : ::roosha::CardChange_DeleteElem::default_instance();
}
::roosha::CardChange_DeleteElem* CardChange::mutable_deleteelem() {
  if (!has_deleteelem()) {
    clear_change();
    set_has_deleteelem();
    change_.deleteelem_ = new ::roosha::CardChange_DeleteElem;
  }
  // @@protoc_insertion_point(field_mutable:roosha.CardChange.deleteElem)
  return change_.deleteelem_;
}
::roosha::CardChange_DeleteElem* CardChange::release_deleteelem() {
  // @@protoc_insertion_point(field_release:roosha.CardChange.deleteElem)
  if (has_deleteelem()) {
    clear_has_change();
    ::roosha::CardChange_DeleteElem* temp = change_.deleteelem_;
    change_.deleteelem_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void CardChange::set_allocated_deleteelem(::roosha::CardChange_DeleteElem* deleteelem) {
  clear_change();
  if (deleteelem) {
    set_has_deleteelem();
    change_.deleteelem_ = deleteelem;
  }
  // @@protoc_insertion_point(field_set_allocated:roosha.CardChange.deleteElem)
}

// .roosha.CardChange.EditElem editElem = 7;
bool CardChange::has_editelem() const {
  return change_case() == kEditElem;
}
void CardChange::set_has_editelem() {
  _oneof_case_[0] = kEditElem;
}
void CardChange::clear_editelem() {
  if (has_editelem()) {
    delete change_.editelem_;
    clear_has_change();
  }
}
 const ::roosha::CardChange_EditElem& CardChange::editelem() const {
  // @@protoc_insertion_point(field_get:roosha.CardChange.editElem)
  return has_editelem()
      ? *change_.editelem_
      : ::roosha::CardChange_EditElem::default_instance();
}
::roosha::CardChange_EditElem* CardChange::mutable_editelem() {
  if (!has_editelem()) {
    clear_change();
    set_has_editelem();
    change_.editelem_ = new ::roosha::CardChange_EditElem;
  }
  // @@protoc_insertion_point(field_mutable:roosha.CardChange.editElem)
  return change_.editelem_;
}
::roosha::CardChange_EditElem* CardChange::release_editelem() {
  // @@protoc_insertion_point(field_release:roosha.CardChange.editElem)
  if (has_editelem()) {
    clear_has_change();
    ::roosha::CardChange_EditElem* temp = change_.editelem_;
    change_.editelem_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void CardChange::set_allocated_editelem(::roosha::CardChange_EditElem* editelem) {
  clear_change();
  if (editelem) {
    set_has_editelem();
    change_.editelem_ = editelem;
  }
  // @@protoc_insertion_point(field_set_allocated:roosha.CardChange.editElem)
}

bool CardChange::has_change() const {
  return change_case() != CHANGE_NOT_SET;
}
void CardChange::clear_has_change() {
  _oneof_case_[0] = CHANGE_NOT_SET;
}
CardChange::ChangeCase CardChange::change_case() const {
  return CardChange::ChangeCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace roosha

// @@protoc_insertion_point(global_scope)
