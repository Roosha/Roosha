// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: commons.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "commons.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace roosha {
class VoidDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Void> {
} _Void_default_instance_;
class CredentialsDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Credentials> {
} _Credentials_default_instance_;
class AuthenticationTokenDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AuthenticationToken> {
} _AuthenticationToken_default_instance_;

namespace protobuf_commons_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[3];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Void, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Credentials, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Credentials, login_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Credentials, passwordhash_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthenticationToken, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthenticationToken, token_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(Void)},
  { 4, -1, sizeof(Credentials)},
  { 10, -1, sizeof(AuthenticationToken)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_Void_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Credentials_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AuthenticationToken_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "commons.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

}  // namespace

void TableStruct::Shutdown() {
  _Void_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _Credentials_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _AuthenticationToken_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _Void_default_instance_.DefaultConstruct();
  _Credentials_default_instance_.DefaultConstruct();
  _AuthenticationToken_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\rcommons.proto\022\006roosha\"\006\n\004Void\"2\n\013Crede"
      "ntials\022\r\n\005login\030\001 \001(\t\022\024\n\014passwordHash\030\002 "
      "\001(\t\"$\n\023AuthenticationToken\022\r\n\005token\030\001 \001("
      "\tB,\n\027com.github.roosha.protoB\014CommonsPro"
      "toH\001\370\001\000b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 175);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "commons.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_commons_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Void::Void()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_commons_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:roosha.Void)
}
Void::Void(const Void& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:roosha.Void)
}

void Void::SharedCtor() {
  _cached_size_ = 0;
}

Void::~Void() {
  // @@protoc_insertion_point(destructor:roosha.Void)
  SharedDtor();
}

void Void::SharedDtor() {
}

void Void::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Void::descriptor() {
  protobuf_commons_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_commons_2eproto::file_level_metadata[0].descriptor;
}

const Void& Void::default_instance() {
  protobuf_commons_2eproto::InitDefaults();
  return *internal_default_instance();
}

Void* Void::New(::google::protobuf::Arena* arena) const {
  Void* n = new Void;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Void::Clear() {
// @@protoc_insertion_point(message_clear_start:roosha.Void)
}

bool Void::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:roosha.Void)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:roosha.Void)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:roosha.Void)
  return false;
#undef DO_
}

void Void::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:roosha.Void)
  // @@protoc_insertion_point(serialize_end:roosha.Void)
}

::google::protobuf::uint8* Void::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:roosha.Void)
  // @@protoc_insertion_point(serialize_to_array_end:roosha.Void)
  return target;
}

size_t Void::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:roosha.Void)
  size_t total_size = 0;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Void::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:roosha.Void)
  GOOGLE_DCHECK_NE(&from, this);
  const Void* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Void>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:roosha.Void)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:roosha.Void)
    MergeFrom(*source);
  }
}

void Void::MergeFrom(const Void& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:roosha.Void)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
}

void Void::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:roosha.Void)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Void::CopyFrom(const Void& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:roosha.Void)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Void::IsInitialized() const {
  return true;
}

void Void::Swap(Void* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Void::InternalSwap(Void* other) {
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Void::GetMetadata() const {
  protobuf_commons_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_commons_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Void

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Credentials::kLoginFieldNumber;
const int Credentials::kPasswordHashFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Credentials::Credentials()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_commons_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:roosha.Credentials)
}
Credentials::Credentials(const Credentials& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  login_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.login().size() > 0) {
    login_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.login_);
  }
  passwordhash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.passwordhash().size() > 0) {
    passwordhash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.passwordhash_);
  }
  // @@protoc_insertion_point(copy_constructor:roosha.Credentials)
}

void Credentials::SharedCtor() {
  login_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  passwordhash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

Credentials::~Credentials() {
  // @@protoc_insertion_point(destructor:roosha.Credentials)
  SharedDtor();
}

void Credentials::SharedDtor() {
  login_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  passwordhash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Credentials::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Credentials::descriptor() {
  protobuf_commons_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_commons_2eproto::file_level_metadata[1].descriptor;
}

const Credentials& Credentials::default_instance() {
  protobuf_commons_2eproto::InitDefaults();
  return *internal_default_instance();
}

Credentials* Credentials::New(::google::protobuf::Arena* arena) const {
  Credentials* n = new Credentials;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Credentials::Clear() {
// @@protoc_insertion_point(message_clear_start:roosha.Credentials)
  login_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  passwordhash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Credentials::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:roosha.Credentials)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string login = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_login()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->login().data(), this->login().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "roosha.Credentials.login"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string passwordHash = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_passwordhash()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->passwordhash().data(), this->passwordhash().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "roosha.Credentials.passwordHash"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:roosha.Credentials)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:roosha.Credentials)
  return false;
#undef DO_
}

void Credentials::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:roosha.Credentials)
  // string login = 1;
  if (this->login().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->login().data(), this->login().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "roosha.Credentials.login");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->login(), output);
  }

  // string passwordHash = 2;
  if (this->passwordhash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->passwordhash().data(), this->passwordhash().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "roosha.Credentials.passwordHash");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->passwordhash(), output);
  }

  // @@protoc_insertion_point(serialize_end:roosha.Credentials)
}

::google::protobuf::uint8* Credentials::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:roosha.Credentials)
  // string login = 1;
  if (this->login().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->login().data(), this->login().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "roosha.Credentials.login");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->login(), target);
  }

  // string passwordHash = 2;
  if (this->passwordhash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->passwordhash().data(), this->passwordhash().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "roosha.Credentials.passwordHash");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->passwordhash(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:roosha.Credentials)
  return target;
}

size_t Credentials::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:roosha.Credentials)
  size_t total_size = 0;

  // string login = 1;
  if (this->login().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->login());
  }

  // string passwordHash = 2;
  if (this->passwordhash().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->passwordhash());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Credentials::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:roosha.Credentials)
  GOOGLE_DCHECK_NE(&from, this);
  const Credentials* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Credentials>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:roosha.Credentials)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:roosha.Credentials)
    MergeFrom(*source);
  }
}

void Credentials::MergeFrom(const Credentials& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:roosha.Credentials)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.login().size() > 0) {

    login_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.login_);
  }
  if (from.passwordhash().size() > 0) {

    passwordhash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.passwordhash_);
  }
}

void Credentials::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:roosha.Credentials)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Credentials::CopyFrom(const Credentials& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:roosha.Credentials)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Credentials::IsInitialized() const {
  return true;
}

void Credentials::Swap(Credentials* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Credentials::InternalSwap(Credentials* other) {
  login_.Swap(&other->login_);
  passwordhash_.Swap(&other->passwordhash_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Credentials::GetMetadata() const {
  protobuf_commons_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_commons_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Credentials

// string login = 1;
void Credentials::clear_login() {
  login_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Credentials::login() const {
  // @@protoc_insertion_point(field_get:roosha.Credentials.login)
  return login_.GetNoArena();
}
void Credentials::set_login(const ::std::string& value) {
  
  login_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:roosha.Credentials.login)
}
#if LANG_CXX11
void Credentials::set_login(::std::string&& value) {
  
  login_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:roosha.Credentials.login)
}
#endif
void Credentials::set_login(const char* value) {
  
  login_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:roosha.Credentials.login)
}
void Credentials::set_login(const char* value, size_t size) {
  
  login_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:roosha.Credentials.login)
}
::std::string* Credentials::mutable_login() {
  
  // @@protoc_insertion_point(field_mutable:roosha.Credentials.login)
  return login_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Credentials::release_login() {
  // @@protoc_insertion_point(field_release:roosha.Credentials.login)
  
  return login_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Credentials::set_allocated_login(::std::string* login) {
  if (login != NULL) {
    
  } else {
    
  }
  login_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), login);
  // @@protoc_insertion_point(field_set_allocated:roosha.Credentials.login)
}

// string passwordHash = 2;
void Credentials::clear_passwordhash() {
  passwordhash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Credentials::passwordhash() const {
  // @@protoc_insertion_point(field_get:roosha.Credentials.passwordHash)
  return passwordhash_.GetNoArena();
}
void Credentials::set_passwordhash(const ::std::string& value) {
  
  passwordhash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:roosha.Credentials.passwordHash)
}
#if LANG_CXX11
void Credentials::set_passwordhash(::std::string&& value) {
  
  passwordhash_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:roosha.Credentials.passwordHash)
}
#endif
void Credentials::set_passwordhash(const char* value) {
  
  passwordhash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:roosha.Credentials.passwordHash)
}
void Credentials::set_passwordhash(const char* value, size_t size) {
  
  passwordhash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:roosha.Credentials.passwordHash)
}
::std::string* Credentials::mutable_passwordhash() {
  
  // @@protoc_insertion_point(field_mutable:roosha.Credentials.passwordHash)
  return passwordhash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Credentials::release_passwordhash() {
  // @@protoc_insertion_point(field_release:roosha.Credentials.passwordHash)
  
  return passwordhash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Credentials::set_allocated_passwordhash(::std::string* passwordhash) {
  if (passwordhash != NULL) {
    
  } else {
    
  }
  passwordhash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), passwordhash);
  // @@protoc_insertion_point(field_set_allocated:roosha.Credentials.passwordHash)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AuthenticationToken::kTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AuthenticationToken::AuthenticationToken()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_commons_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:roosha.AuthenticationToken)
}
AuthenticationToken::AuthenticationToken(const AuthenticationToken& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  // @@protoc_insertion_point(copy_constructor:roosha.AuthenticationToken)
}

void AuthenticationToken::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

AuthenticationToken::~AuthenticationToken() {
  // @@protoc_insertion_point(destructor:roosha.AuthenticationToken)
  SharedDtor();
}

void AuthenticationToken::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AuthenticationToken::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AuthenticationToken::descriptor() {
  protobuf_commons_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_commons_2eproto::file_level_metadata[2].descriptor;
}

const AuthenticationToken& AuthenticationToken::default_instance() {
  protobuf_commons_2eproto::InitDefaults();
  return *internal_default_instance();
}

AuthenticationToken* AuthenticationToken::New(::google::protobuf::Arena* arena) const {
  AuthenticationToken* n = new AuthenticationToken;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AuthenticationToken::Clear() {
// @@protoc_insertion_point(message_clear_start:roosha.AuthenticationToken)
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool AuthenticationToken::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:roosha.AuthenticationToken)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string token = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), this->token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "roosha.AuthenticationToken.token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:roosha.AuthenticationToken)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:roosha.AuthenticationToken)
  return false;
#undef DO_
}

void AuthenticationToken::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:roosha.AuthenticationToken)
  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "roosha.AuthenticationToken.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  // @@protoc_insertion_point(serialize_end:roosha.AuthenticationToken)
}

::google::protobuf::uint8* AuthenticationToken::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:roosha.AuthenticationToken)
  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "roosha.AuthenticationToken.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:roosha.AuthenticationToken)
  return target;
}

size_t AuthenticationToken::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:roosha.AuthenticationToken)
  size_t total_size = 0;

  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AuthenticationToken::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:roosha.AuthenticationToken)
  GOOGLE_DCHECK_NE(&from, this);
  const AuthenticationToken* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AuthenticationToken>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:roosha.AuthenticationToken)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:roosha.AuthenticationToken)
    MergeFrom(*source);
  }
}

void AuthenticationToken::MergeFrom(const AuthenticationToken& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:roosha.AuthenticationToken)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
}

void AuthenticationToken::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:roosha.AuthenticationToken)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AuthenticationToken::CopyFrom(const AuthenticationToken& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:roosha.AuthenticationToken)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthenticationToken::IsInitialized() const {
  return true;
}

void AuthenticationToken::Swap(AuthenticationToken* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AuthenticationToken::InternalSwap(AuthenticationToken* other) {
  token_.Swap(&other->token_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AuthenticationToken::GetMetadata() const {
  protobuf_commons_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_commons_2eproto::file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AuthenticationToken

// string token = 1;
void AuthenticationToken::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AuthenticationToken::token() const {
  // @@protoc_insertion_point(field_get:roosha.AuthenticationToken.token)
  return token_.GetNoArena();
}
void AuthenticationToken::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:roosha.AuthenticationToken.token)
}
#if LANG_CXX11
void AuthenticationToken::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:roosha.AuthenticationToken.token)
}
#endif
void AuthenticationToken::set_token(const char* value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:roosha.AuthenticationToken.token)
}
void AuthenticationToken::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:roosha.AuthenticationToken.token)
}
::std::string* AuthenticationToken::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:roosha.AuthenticationToken.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AuthenticationToken::release_token() {
  // @@protoc_insertion_point(field_release:roosha.AuthenticationToken.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AuthenticationToken::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:roosha.AuthenticationToken.token)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace roosha

// @@protoc_insertion_point(global_scope)
