// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: learning.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "learning.pb.h"

#include <algorithm>

#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace roosha {
class ScrutinyDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Scrutiny> {
} _Scrutiny_default_instance_;

namespace protobuf_learning_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[1];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[3];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Scrutiny, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Scrutiny, cardid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Scrutiny, moment_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Scrutiny, inputmethod_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Scrutiny, viewmethod_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Scrutiny, status_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(Scrutiny)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_Scrutiny_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "learning.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

}  // namespace

void TableStruct::Shutdown() {
  _Scrutiny_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _Scrutiny_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\016learning.proto\022\006roosha\"\250\001\n\010Scrutiny\022\016\n"
      "\006cardId\030\001 \001(\t\022\016\n\006moment\030\002 \001(\t\022*\n\013inputMe"
      "thod\030\003 \001(\0162\025.roosha.ScrutinyInput\022(\n\nvie"
      "wMethod\030\004 \001(\0162\024.roosha.ScrutinyView\022&\n\006s"
      "tatus\030\005 \001(\0162\026.roosha.ScrutinyStatus*B\n\014S"
      "crutinyView\022\031\n\025UNKNOWN_SCRUTINY_VIEW\020\000\022\027"
      "\n\023TARGETS_AND_EXAMPLE\020\001*;\n\rScrutinyInput"
      "\022\032\n\026UNKNOWN_SCRUTINY_INPUT\020\000\022\016\n\nTEXT_INP"
      "UT\020\001*k\n\016ScrutinyStatus\022\033\n\027UNKNOWN_SCTUTI"
      "NY_STATUS\020\000\022\013\n\007SKIPPED\020\001\022\n\n\006FAILED\020\002\022\010\n\004"
      "EASY\020\003\022\n\n\006NORMAL\020\004\022\r\n\tDIFFICULT\020\005B(\n\027com"
      ".github.roosha.protoB\010LearningH\001\370\001\000b\006pro"
      "to3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 483);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "learning.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_learning_2eproto

const ::google::protobuf::EnumDescriptor* ScrutinyView_descriptor() {
  protobuf_learning_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_learning_2eproto::file_level_enum_descriptors[0];
}
bool ScrutinyView_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ScrutinyInput_descriptor() {
  protobuf_learning_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_learning_2eproto::file_level_enum_descriptors[1];
}
bool ScrutinyInput_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ScrutinyStatus_descriptor() {
  protobuf_learning_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_learning_2eproto::file_level_enum_descriptors[2];
}
bool ScrutinyStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Scrutiny::kCardIdFieldNumber;
const int Scrutiny::kMomentFieldNumber;
const int Scrutiny::kInputMethodFieldNumber;
const int Scrutiny::kViewMethodFieldNumber;
const int Scrutiny::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Scrutiny::Scrutiny()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_learning_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:roosha.Scrutiny)
}
Scrutiny::Scrutiny(const Scrutiny& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cardid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cardid().size() > 0) {
    cardid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cardid_);
  }
  moment_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.moment().size() > 0) {
    moment_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.moment_);
  }
  ::memcpy(&inputmethod_, &from.inputmethod_,
    reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&inputmethod_) + sizeof(status_));
  // @@protoc_insertion_point(copy_constructor:roosha.Scrutiny)
}

void Scrutiny::SharedCtor() {
  cardid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  moment_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&inputmethod_, 0, reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&inputmethod_) + sizeof(status_));
  _cached_size_ = 0;
}

Scrutiny::~Scrutiny() {
  // @@protoc_insertion_point(destructor:roosha.Scrutiny)
  SharedDtor();
}

void Scrutiny::SharedDtor() {
  cardid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  moment_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Scrutiny::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Scrutiny::descriptor() {
  protobuf_learning_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_learning_2eproto::file_level_metadata[0].descriptor;
}

const Scrutiny& Scrutiny::default_instance() {
  protobuf_learning_2eproto::InitDefaults();
  return *internal_default_instance();
}

Scrutiny* Scrutiny::New(::google::protobuf::Arena* arena) const {
  Scrutiny* n = new Scrutiny;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Scrutiny::Clear() {
// @@protoc_insertion_point(message_clear_start:roosha.Scrutiny)
  cardid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  moment_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&inputmethod_, 0, reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&inputmethod_) + sizeof(status_));
}

bool Scrutiny::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:roosha.Scrutiny)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string cardId = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cardid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cardid().data(), this->cardid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "roosha.Scrutiny.cardId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string moment = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_moment()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->moment().data(), this->moment().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "roosha.Scrutiny.moment"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .roosha.ScrutinyInput inputMethod = 3;
      case 3: {
        if (tag == 24u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_inputmethod(static_cast< ::roosha::ScrutinyInput >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .roosha.ScrutinyView viewMethod = 4;
      case 4: {
        if (tag == 32u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_viewmethod(static_cast< ::roosha::ScrutinyView >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .roosha.ScrutinyStatus status = 5;
      case 5: {
        if (tag == 40u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_status(static_cast< ::roosha::ScrutinyStatus >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:roosha.Scrutiny)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:roosha.Scrutiny)
  return false;
#undef DO_
}

void Scrutiny::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:roosha.Scrutiny)
  // string cardId = 1;
  if (this->cardid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cardid().data(), this->cardid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "roosha.Scrutiny.cardId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->cardid(), output);
  }

  // string moment = 2;
  if (this->moment().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->moment().data(), this->moment().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "roosha.Scrutiny.moment");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->moment(), output);
  }

  // .roosha.ScrutinyInput inputMethod = 3;
  if (this->inputmethod() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->inputmethod(), output);
  }

  // .roosha.ScrutinyView viewMethod = 4;
  if (this->viewmethod() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->viewmethod(), output);
  }

  // .roosha.ScrutinyStatus status = 5;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->status(), output);
  }

  // @@protoc_insertion_point(serialize_end:roosha.Scrutiny)
}

::google::protobuf::uint8* Scrutiny::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:roosha.Scrutiny)
  // string cardId = 1;
  if (this->cardid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cardid().data(), this->cardid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "roosha.Scrutiny.cardId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->cardid(), target);
  }

  // string moment = 2;
  if (this->moment().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->moment().data(), this->moment().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "roosha.Scrutiny.moment");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->moment(), target);
  }

  // .roosha.ScrutinyInput inputMethod = 3;
  if (this->inputmethod() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->inputmethod(), target);
  }

  // .roosha.ScrutinyView viewMethod = 4;
  if (this->viewmethod() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->viewmethod(), target);
  }

  // .roosha.ScrutinyStatus status = 5;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->status(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:roosha.Scrutiny)
  return target;
}

size_t Scrutiny::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:roosha.Scrutiny)
  size_t total_size = 0;

  // string cardId = 1;
  if (this->cardid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cardid());
  }

  // string moment = 2;
  if (this->moment().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->moment());
  }

  // .roosha.ScrutinyInput inputMethod = 3;
  if (this->inputmethod() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->inputmethod());
  }

  // .roosha.ScrutinyView viewMethod = 4;
  if (this->viewmethod() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->viewmethod());
  }

  // .roosha.ScrutinyStatus status = 5;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Scrutiny::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:roosha.Scrutiny)
  GOOGLE_DCHECK_NE(&from, this);
  const Scrutiny* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Scrutiny>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:roosha.Scrutiny)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:roosha.Scrutiny)
    MergeFrom(*source);
  }
}

void Scrutiny::MergeFrom(const Scrutiny& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:roosha.Scrutiny)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.cardid().size() > 0) {

    cardid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cardid_);
  }
  if (from.moment().size() > 0) {

    moment_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.moment_);
  }
  if (from.inputmethod() != 0) {
    set_inputmethod(from.inputmethod());
  }
  if (from.viewmethod() != 0) {
    set_viewmethod(from.viewmethod());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void Scrutiny::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:roosha.Scrutiny)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Scrutiny::CopyFrom(const Scrutiny& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:roosha.Scrutiny)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Scrutiny::IsInitialized() const {
  return true;
}

void Scrutiny::Swap(Scrutiny* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Scrutiny::InternalSwap(Scrutiny* other) {
  cardid_.Swap(&other->cardid_);
  moment_.Swap(&other->moment_);
  std::swap(inputmethod_, other->inputmethod_);
  std::swap(viewmethod_, other->viewmethod_);
  std::swap(status_, other->status_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Scrutiny::GetMetadata() const {
  protobuf_learning_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_learning_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Scrutiny

// string cardId = 1;
void Scrutiny::clear_cardid() {
  cardid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Scrutiny::cardid() const {
  // @@protoc_insertion_point(field_get:roosha.Scrutiny.cardId)
  return cardid_.GetNoArena();
}
void Scrutiny::set_cardid(const ::std::string& value) {
  
  cardid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:roosha.Scrutiny.cardId)
}
#if LANG_CXX11
void Scrutiny::set_cardid(::std::string&& value) {
  
  cardid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:roosha.Scrutiny.cardId)
}
#endif
void Scrutiny::set_cardid(const char* value) {
  
  cardid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:roosha.Scrutiny.cardId)
}
void Scrutiny::set_cardid(const char* value, size_t size) {
  
  cardid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:roosha.Scrutiny.cardId)
}
::std::string* Scrutiny::mutable_cardid() {
  
  // @@protoc_insertion_point(field_mutable:roosha.Scrutiny.cardId)
  return cardid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Scrutiny::release_cardid() {
  // @@protoc_insertion_point(field_release:roosha.Scrutiny.cardId)
  
  return cardid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Scrutiny::set_allocated_cardid(::std::string* cardid) {
  if (cardid != NULL) {
    
  } else {
    
  }
  cardid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cardid);
  // @@protoc_insertion_point(field_set_allocated:roosha.Scrutiny.cardId)
}

// string moment = 2;
void Scrutiny::clear_moment() {
  moment_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Scrutiny::moment() const {
  // @@protoc_insertion_point(field_get:roosha.Scrutiny.moment)
  return moment_.GetNoArena();
}
void Scrutiny::set_moment(const ::std::string& value) {
  
  moment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:roosha.Scrutiny.moment)
}
#if LANG_CXX11
void Scrutiny::set_moment(::std::string&& value) {
  
  moment_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:roosha.Scrutiny.moment)
}
#endif
void Scrutiny::set_moment(const char* value) {
  
  moment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:roosha.Scrutiny.moment)
}
void Scrutiny::set_moment(const char* value, size_t size) {
  
  moment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:roosha.Scrutiny.moment)
}
::std::string* Scrutiny::mutable_moment() {
  
  // @@protoc_insertion_point(field_mutable:roosha.Scrutiny.moment)
  return moment_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Scrutiny::release_moment() {
  // @@protoc_insertion_point(field_release:roosha.Scrutiny.moment)
  
  return moment_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Scrutiny::set_allocated_moment(::std::string* moment) {
  if (moment != NULL) {
    
  } else {
    
  }
  moment_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), moment);
  // @@protoc_insertion_point(field_set_allocated:roosha.Scrutiny.moment)
}

// .roosha.ScrutinyInput inputMethod = 3;
void Scrutiny::clear_inputmethod() {
  inputmethod_ = 0;
}
::roosha::ScrutinyInput Scrutiny::inputmethod() const {
  // @@protoc_insertion_point(field_get:roosha.Scrutiny.inputMethod)
  return static_cast< ::roosha::ScrutinyInput >(inputmethod_);
}
void Scrutiny::set_inputmethod(::roosha::ScrutinyInput value) {
  
  inputmethod_ = value;
  // @@protoc_insertion_point(field_set:roosha.Scrutiny.inputMethod)
}

// .roosha.ScrutinyView viewMethod = 4;
void Scrutiny::clear_viewmethod() {
  viewmethod_ = 0;
}
::roosha::ScrutinyView Scrutiny::viewmethod() const {
  // @@protoc_insertion_point(field_get:roosha.Scrutiny.viewMethod)
  return static_cast< ::roosha::ScrutinyView >(viewmethod_);
}
void Scrutiny::set_viewmethod(::roosha::ScrutinyView value) {
  
  viewmethod_ = value;
  // @@protoc_insertion_point(field_set:roosha.Scrutiny.viewMethod)
}

// .roosha.ScrutinyStatus status = 5;
void Scrutiny::clear_status() {
  status_ = 0;
}
::roosha::ScrutinyStatus Scrutiny::status() const {
  // @@protoc_insertion_point(field_get:roosha.Scrutiny.status)
  return static_cast< ::roosha::ScrutinyStatus >(status_);
}
void Scrutiny::set_status(::roosha::ScrutinyStatus value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:roosha.Scrutiny.status)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace roosha

// @@protoc_insertion_point(global_scope)
