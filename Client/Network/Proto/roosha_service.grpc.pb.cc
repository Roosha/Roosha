// Generated by the gRPC protobuf plugin.
// If you make any local change, they will be lost.
// source: roosha_service.proto

#include "roosha_service.pb.h"
#include "roosha_service.grpc.pb.h"

#include <grpc++/impl/codegen/async_stream.h>
#include <grpc++/impl/codegen/async_unary_call.h>
#include <grpc++/impl/codegen/channel_interface.h>
#include <grpc++/impl/codegen/client_unary_call.h>
#include <grpc++/impl/codegen/method_handler_impl.h>
#include <grpc++/impl/codegen/rpc_service_method.h>
#include <grpc++/impl/codegen/service_type.h>
#include <grpc++/impl/codegen/sync_stream.h>
namespace roosha {

static const char* RooshaService_method_names[] = {
  "/roosha.RooshaService/registrate",
  "/roosha.RooshaService/authorize",
  "/roosha.RooshaService/translate",
  "/roosha.RooshaService/proposeUserTranslations",
};

std::unique_ptr< RooshaService::Stub> RooshaService::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  std::unique_ptr< RooshaService::Stub> stub(new RooshaService::Stub(channel));
  return stub;
}

RooshaService::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel)
  : channel_(channel), rpcmethod_registrate_(RooshaService_method_names[0], ::grpc::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_authorize_(RooshaService_method_names[1], ::grpc::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_translate_(RooshaService_method_names[2], ::grpc::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_proposeUserTranslations_(RooshaService_method_names[3], ::grpc::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status RooshaService::Stub::registrate(::grpc::ClientContext* context, const ::roosha::Credentials& request, ::roosha::AuthenticationToken* response) {
  return ::grpc::BlockingUnaryCall(channel_.get(), rpcmethod_registrate_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::roosha::AuthenticationToken>* RooshaService::Stub::AsyncregistrateRaw(::grpc::ClientContext* context, const ::roosha::Credentials& request, ::grpc::CompletionQueue* cq) {
  return new ::grpc::ClientAsyncResponseReader< ::roosha::AuthenticationToken>(channel_.get(), cq, rpcmethod_registrate_, context, request);
}

::grpc::Status RooshaService::Stub::authorize(::grpc::ClientContext* context, const ::roosha::Credentials& request, ::roosha::AuthenticationToken* response) {
  return ::grpc::BlockingUnaryCall(channel_.get(), rpcmethod_authorize_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::roosha::AuthenticationToken>* RooshaService::Stub::AsyncauthorizeRaw(::grpc::ClientContext* context, const ::roosha::Credentials& request, ::grpc::CompletionQueue* cq) {
  return new ::grpc::ClientAsyncResponseReader< ::roosha::AuthenticationToken>(channel_.get(), cq, rpcmethod_authorize_, context, request);
}

::grpc::Status RooshaService::Stub::translate(::grpc::ClientContext* context, const ::roosha::TranslationRequest& request, ::roosha::Translations* response) {
  return ::grpc::BlockingUnaryCall(channel_.get(), rpcmethod_translate_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::roosha::Translations>* RooshaService::Stub::AsynctranslateRaw(::grpc::ClientContext* context, const ::roosha::TranslationRequest& request, ::grpc::CompletionQueue* cq) {
  return new ::grpc::ClientAsyncResponseReader< ::roosha::Translations>(channel_.get(), cq, rpcmethod_translate_, context, request);
}

::grpc::Status RooshaService::Stub::proposeUserTranslations(::grpc::ClientContext* context, const ::roosha::Translations& request, ::roosha::Void* response) {
  return ::grpc::BlockingUnaryCall(channel_.get(), rpcmethod_proposeUserTranslations_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::roosha::Void>* RooshaService::Stub::AsyncproposeUserTranslationsRaw(::grpc::ClientContext* context, const ::roosha::Translations& request, ::grpc::CompletionQueue* cq) {
  return new ::grpc::ClientAsyncResponseReader< ::roosha::Void>(channel_.get(), cq, rpcmethod_proposeUserTranslations_, context, request);
}

RooshaService::Service::Service() {
  (void)RooshaService_method_names;
  AddMethod(new ::grpc::RpcServiceMethod(
      RooshaService_method_names[0],
      ::grpc::RpcMethod::NORMAL_RPC,
      new ::grpc::RpcMethodHandler< RooshaService::Service, ::roosha::Credentials, ::roosha::AuthenticationToken>(
          std::mem_fn(&RooshaService::Service::registrate), this)));
  AddMethod(new ::grpc::RpcServiceMethod(
      RooshaService_method_names[1],
      ::grpc::RpcMethod::NORMAL_RPC,
      new ::grpc::RpcMethodHandler< RooshaService::Service, ::roosha::Credentials, ::roosha::AuthenticationToken>(
          std::mem_fn(&RooshaService::Service::authorize), this)));
  AddMethod(new ::grpc::RpcServiceMethod(
      RooshaService_method_names[2],
      ::grpc::RpcMethod::NORMAL_RPC,
      new ::grpc::RpcMethodHandler< RooshaService::Service, ::roosha::TranslationRequest, ::roosha::Translations>(
          std::mem_fn(&RooshaService::Service::translate), this)));
  AddMethod(new ::grpc::RpcServiceMethod(
      RooshaService_method_names[3],
      ::grpc::RpcMethod::NORMAL_RPC,
      new ::grpc::RpcMethodHandler< RooshaService::Service, ::roosha::Translations, ::roosha::Void>(
          std::mem_fn(&RooshaService::Service::proposeUserTranslations), this)));
}

RooshaService::Service::~Service() {
}

::grpc::Status RooshaService::Service::registrate(::grpc::ServerContext* context, const ::roosha::Credentials* request, ::roosha::AuthenticationToken* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status RooshaService::Service::authorize(::grpc::ServerContext* context, const ::roosha::Credentials* request, ::roosha::AuthenticationToken* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status RooshaService::Service::translate(::grpc::ServerContext* context, const ::roosha::TranslationRequest* request, ::roosha::Translations* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status RooshaService::Service::proposeUserTranslations(::grpc::ServerContext* context, const ::roosha::Translations* request, ::roosha::Void* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


}  // namespace roosha

