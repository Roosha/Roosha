/*
 *  Copyright (c) 2016 Leo Khotov
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU Lesser General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public License
 *  version 3 along with this work.  If not, see <http://www.gnu.org/licenses/>.
 *
 */
syntax = "proto3";

package roosha;

import "commons.proto";
import "changes.proto";

option java_package = "com.github.roosha.proto";
option java_outer_classname = "TranslationServiceProto";

option cc_enable_arenas = false;

option optimize_for = SPEED;


service RooshaService {
  	rpc registrate(Credentials) returns (AuthenticationToken);
	rpc authorize(Credentials) returns (AuthenticationToken);

	// methods declared below should pass authorization token in 'roosha-auth-token' metadata key.
    rpc translate(TranslationRequest) returns (Translations);
    rpc proposeUserTranslations(Translations) returns (Void);

	rpc saveChanges(stream Change) returns (Void);
	rpc loadChanges(Void) returns (stream Change);
}

message TranslationRequest {
    // Text to be translated
    string source = 1;
}

message Translations {
    string source = 1;
    repeated Translation translation = 2;
}

message Translation {
    repeated string target = 1;
    repeated string example = 2;
    TranslationProvider provider = 3;
}

enum TranslationProvider {
    UNKNOWN = 0;
    YANDEX_DICTIONARY = 1;
    YANDEX_TRANSLATOR = 2;
}
